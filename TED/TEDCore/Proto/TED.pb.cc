// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TED.proto

#include "TED.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace TED {
namespace Grpc {
PROTOBUF_CONSTEXPR Empty::Empty(
    ::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
PROTOBUF_CONSTEXPR SegmentRegisters::SegmentRegisters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cs_)*/0u
  , /*decltype(_impl_.ds_)*/0u
  , /*decltype(_impl_.es_)*/0u
  , /*decltype(_impl_.fs_)*/0u
  , /*decltype(_impl_.gs_)*/0u
  , /*decltype(_impl_.ss_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SegmentRegistersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SegmentRegistersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SegmentRegistersDefaultTypeInternal() {}
  union {
    SegmentRegisters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SegmentRegistersDefaultTypeInternal _SegmentRegisters_default_instance_;
PROTOBUF_CONSTEXPR DebugRegisters::DebugRegisters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dr0_)*/uint64_t{0u}
  , /*decltype(_impl_.dr1_)*/uint64_t{0u}
  , /*decltype(_impl_.dr2_)*/uint64_t{0u}
  , /*decltype(_impl_.dr3_)*/uint64_t{0u}
  , /*decltype(_impl_.dr6_)*/uint64_t{0u}
  , /*decltype(_impl_.dr7_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DebugRegistersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugRegistersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugRegistersDefaultTypeInternal() {}
  union {
    DebugRegisters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugRegistersDefaultTypeInternal _DebugRegisters_default_instance_;
PROTOBUF_CONSTEXPR GeneralRegisters::GeneralRegisters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rax_)*/uint64_t{0u}
  , /*decltype(_impl_.rcx_)*/uint64_t{0u}
  , /*decltype(_impl_.rdx_)*/uint64_t{0u}
  , /*decltype(_impl_.rbx_)*/uint64_t{0u}
  , /*decltype(_impl_.rsp_)*/uint64_t{0u}
  , /*decltype(_impl_.rbp_)*/uint64_t{0u}
  , /*decltype(_impl_.rsi_)*/uint64_t{0u}
  , /*decltype(_impl_.rdi_)*/uint64_t{0u}
  , /*decltype(_impl_.rip_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GeneralRegistersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneralRegistersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneralRegistersDefaultTypeInternal() {}
  union {
    GeneralRegisters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneralRegistersDefaultTypeInternal _GeneralRegisters_default_instance_;
PROTOBUF_CONSTEXPR GeneralRegistersX64::GeneralRegistersX64(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.r8_)*/uint64_t{0u}
  , /*decltype(_impl_.r9_)*/uint64_t{0u}
  , /*decltype(_impl_.r10_)*/uint64_t{0u}
  , /*decltype(_impl_.r11_)*/uint64_t{0u}
  , /*decltype(_impl_.r12_)*/uint64_t{0u}
  , /*decltype(_impl_.r13_)*/uint64_t{0u}
  , /*decltype(_impl_.r14_)*/uint64_t{0u}
  , /*decltype(_impl_.r15_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GeneralRegistersX64DefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneralRegistersX64DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneralRegistersX64DefaultTypeInternal() {}
  union {
    GeneralRegistersX64 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneralRegistersX64DefaultTypeInternal _GeneralRegistersX64_default_instance_;
PROTOBUF_CONSTEXPR Context::Context(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.segment_registers_)*/nullptr
  , /*decltype(_impl_.debug_registers_)*/nullptr
  , /*decltype(_impl_.general_registers_)*/nullptr
  , /*decltype(_impl_.general_registers_x64_)*/nullptr
  , /*decltype(_impl_.processor_flags_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ContextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextDefaultTypeInternal() {}
  union {
    Context _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextDefaultTypeInternal _Context_default_instance_;
PROTOBUF_CONSTEXPR Symbols::Symbols(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.function_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SymbolsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SymbolsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SymbolsDefaultTypeInternal() {}
  union {
    Symbols _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SymbolsDefaultTypeInternal _Symbols_default_instance_;
PROTOBUF_CONSTEXPR StackFrame::StackFrame(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{}
  , /*decltype(_impl_._parameters_cached_byte_size_)*/{0}
  , /*decltype(_impl_.symbols_)*/nullptr
  , /*decltype(_impl_.rip_)*/uint64_t{0u}
  , /*decltype(_impl_.return_address_)*/uint64_t{0u}
  , /*decltype(_impl_.frame_pointer_)*/uint64_t{0u}
  , /*decltype(_impl_.stack_pointer_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StackFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameDefaultTypeInternal() {}
  union {
    StackFrame _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameDefaultTypeInternal _StackFrame_default_instance_;
PROTOBUF_CONSTEXPR CallStack::CallStack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stack_frame_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CallStackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CallStackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CallStackDefaultTypeInternal() {}
  union {
    CallStack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CallStackDefaultTypeInternal _CallStack_default_instance_;
PROTOBUF_CONSTEXPR BreakpointResponse::BreakpointResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_.call_stack_)*/nullptr
  , /*decltype(_impl_.process_id_)*/0u
  , /*decltype(_impl_.thread_id_)*/0u
  , /*decltype(_impl_.source_address_)*/uint64_t{0u}
  , /*decltype(_impl_.destination_address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BreakpointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BreakpointResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BreakpointResponseDefaultTypeInternal() {}
  union {
    BreakpointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BreakpointResponseDefaultTypeInternal _BreakpointResponse_default_instance_;
PROTOBUF_CONSTEXPR ExecutableSection::ExecutableSection(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_.size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExecutableSectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutableSectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutableSectionDefaultTypeInternal() {}
  union {
    ExecutableSection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutableSectionDefaultTypeInternal _ExecutableSection_default_instance_;
PROTOBUF_CONSTEXPR ModuleInfo::ModuleInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.executable_sections_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_address_)*/uint64_t{0u}
  , /*decltype(_impl_.size_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModuleInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleInfoDefaultTypeInternal() {}
  union {
    ModuleInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleInfoDefaultTypeInternal _ModuleInfo_default_instance_;
PROTOBUF_CONSTEXPR GetModulesResponse::GetModulesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_info_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModulesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModulesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModulesResponseDefaultTypeInternal() {}
  union {
    GetModulesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModulesResponseDefaultTypeInternal _GetModulesResponse_default_instance_;
PROTOBUF_CONSTEXPR EnableBreakAllCallsInModuleRequest::EnableBreakAllCallsInModuleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableBreakAllCallsInModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBreakAllCallsInModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBreakAllCallsInModuleRequestDefaultTypeInternal() {}
  union {
    EnableBreakAllCallsInModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBreakAllCallsInModuleRequestDefaultTypeInternal _EnableBreakAllCallsInModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBreakAllCallsInModuleRequest::DisableBreakAllCallsInModuleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.module_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableBreakAllCallsInModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBreakAllCallsInModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBreakAllCallsInModuleRequestDefaultTypeInternal() {}
  union {
    DisableBreakAllCallsInModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBreakAllCallsInModuleRequestDefaultTypeInternal _DisableBreakAllCallsInModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableBreakCallByAddressRequest::EnableBreakCallByAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableBreakCallByAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBreakCallByAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBreakCallByAddressRequestDefaultTypeInternal() {}
  union {
    EnableBreakCallByAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBreakCallByAddressRequestDefaultTypeInternal _EnableBreakCallByAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBreakCallByAddressRequest::DisableBreakCallByAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableBreakCallByAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBreakCallByAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBreakCallByAddressRequestDefaultTypeInternal() {}
  union {
    DisableBreakCallByAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBreakCallByAddressRequestDefaultTypeInternal _DisableBreakCallByAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableBreakCallByNameRequest::EnableBreakCallByNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableBreakCallByNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBreakCallByNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBreakCallByNameRequestDefaultTypeInternal() {}
  union {
    EnableBreakCallByNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBreakCallByNameRequestDefaultTypeInternal _EnableBreakCallByNameRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBreakCallByNameRequest::DisableBreakCallByNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableBreakCallByNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBreakCallByNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBreakCallByNameRequestDefaultTypeInternal() {}
  union {
    DisableBreakCallByNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBreakCallByNameRequestDefaultTypeInternal _DisableBreakCallByNameRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableBreakpointByAddressRequest::EnableBreakpointByAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableBreakpointByAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBreakpointByAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBreakpointByAddressRequestDefaultTypeInternal() {}
  union {
    EnableBreakpointByAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBreakpointByAddressRequestDefaultTypeInternal _EnableBreakpointByAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBreakpointByAddressRequest::DisableBreakpointByAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableBreakpointByAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBreakpointByAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBreakpointByAddressRequestDefaultTypeInternal() {}
  union {
    DisableBreakpointByAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBreakpointByAddressRequestDefaultTypeInternal _DisableBreakpointByAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableBreakpointByNameRequest::EnableBreakpointByNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnableBreakpointByNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBreakpointByNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBreakpointByNameRequestDefaultTypeInternal() {}
  union {
    EnableBreakpointByNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBreakpointByNameRequestDefaultTypeInternal _EnableBreakpointByNameRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBreakpointByNameRequest::DisableBreakpointByNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisableBreakpointByNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBreakpointByNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBreakpointByNameRequestDefaultTypeInternal() {}
  union {
    DisableBreakpointByNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBreakpointByNameRequestDefaultTypeInternal _DisableBreakpointByNameRequest_default_instance_;
PROTOBUF_CONSTEXPR LoadModuleRequest::LoadModuleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadModuleRequestDefaultTypeInternal() {}
  union {
    LoadModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadModuleRequestDefaultTypeInternal _LoadModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR UnloadModuleRequest::UnloadModuleRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnloadModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnloadModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnloadModuleRequestDefaultTypeInternal() {}
  union {
    UnloadModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnloadModuleRequestDefaultTypeInternal _UnloadModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadMemoryRequest::ReadMemoryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_.size_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadMemoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMemoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMemoryRequestDefaultTypeInternal() {}
  union {
    ReadMemoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMemoryRequestDefaultTypeInternal _ReadMemoryRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadMemoryResponse::ReadMemoryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadMemoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMemoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMemoryResponseDefaultTypeInternal() {}
  union {
    ReadMemoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMemoryResponseDefaultTypeInternal _ReadMemoryResponse_default_instance_;
PROTOBUF_CONSTEXPR WriteMemoryRequest::WriteMemoryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WriteMemoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteMemoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteMemoryRequestDefaultTypeInternal() {}
  union {
    WriteMemoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteMemoryRequestDefaultTypeInternal _WriteMemoryRequest_default_instance_;
PROTOBUF_CONSTEXPR OptionsRequest::OptionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.symbol_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.return_call_stack_)*/false
  , /*decltype(_impl_.return_context_)*/false
  , /*decltype(_impl_.return_symbol_info_)*/false
  , /*decltype(_impl_.use_invasive_breakpoints_)*/false
  , /*decltype(_impl_.unsafe_memory_mode_)*/false
  , /*decltype(_impl_.auto_disable_breakpoints_mode_)*/false
  , /*decltype(_impl_.kill_process_on_disconnect_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionsRequestDefaultTypeInternal() {}
  union {
    OptionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionsRequestDefaultTypeInternal _OptionsRequest_default_instance_;
PROTOBUF_CONSTEXPR DisassembleAddressRequest::DisassembleAddressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_.size_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisassembleAddressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisassembleAddressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisassembleAddressRequestDefaultTypeInternal() {}
  union {
    DisassembleAddressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisassembleAddressRequestDefaultTypeInternal _DisassembleAddressRequest_default_instance_;
PROTOBUF_CONSTEXPR Instruction::Instruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mnemonic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstructionDefaultTypeInternal() {}
  union {
    Instruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstructionDefaultTypeInternal _Instruction_default_instance_;
PROTOBUF_CONSTEXPR DisassembleAddressResponse::DisassembleAddressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instructions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DisassembleAddressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisassembleAddressResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisassembleAddressResponseDefaultTypeInternal() {}
  union {
    DisassembleAddressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisassembleAddressResponseDefaultTypeInternal _DisassembleAddressResponse_default_instance_;
PROTOBUF_CONSTEXPR GenericResponse::GenericResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.last_error_code_)*/{}
  , /*decltype(_impl_._last_error_code_cached_byte_size_)*/{0}
  , /*decltype(_impl_.error_message_)*/{}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenericResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenericResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenericResponseDefaultTypeInternal() {}
  union {
    GenericResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenericResponseDefaultTypeInternal _GenericResponse_default_instance_;
}  // namespace Grpc
}  // namespace TED
static ::_pb::Metadata file_level_metadata_TED_2eproto[33];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_TED_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_TED_2eproto = nullptr;

const uint32_t TableStruct_TED_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.cs_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.ds_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.es_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.fs_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.gs_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::SegmentRegisters, _impl_.ss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr0_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr1_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr2_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr3_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr6_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DebugRegisters, _impl_.dr7_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rax_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rcx_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rdx_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rbx_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rsp_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rbp_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rsi_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rdi_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegisters, _impl_.rip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r8_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r9_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r10_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r11_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r12_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r13_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r14_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GeneralRegistersX64, _impl_.r15_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _impl_.segment_registers_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _impl_.debug_registers_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _impl_.general_registers_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _impl_.general_registers_x64_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Context, _impl_.processor_flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Symbols, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Symbols, _impl_.function_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.rip_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.return_address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.frame_pointer_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.stack_pointer_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.parameters_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::StackFrame, _impl_.symbols_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::CallStack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::CallStack, _impl_.stack_frame_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.process_id_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.thread_id_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.source_address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.destination_address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::BreakpointResponse, _impl_.call_stack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ExecutableSection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ExecutableSection, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ExecutableSection, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ExecutableSection, _impl_.size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ModuleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ModuleInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ModuleInfo, _impl_.base_address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ModuleInfo, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ModuleInfo, _impl_.executable_sections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GetModulesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GetModulesResponse, _impl_.module_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakAllCallsInModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakAllCallsInModuleRequest, _impl_.module_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakAllCallsInModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakAllCallsInModuleRequest, _impl_.module_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakCallByAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakCallByAddressRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakCallByAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakCallByAddressRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakCallByNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakCallByNameRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakCallByNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakCallByNameRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakpointByAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakpointByAddressRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakpointByAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakpointByAddressRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakpointByNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::EnableBreakpointByNameRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakpointByNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisableBreakpointByNameRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::LoadModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::LoadModuleRequest, _impl_.path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::UnloadModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::UnloadModuleRequest, _impl_.path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ReadMemoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ReadMemoryRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ReadMemoryRequest, _impl_.size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ReadMemoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::ReadMemoryResponse, _impl_.bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::WriteMemoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::WriteMemoryRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::WriteMemoryRequest, _impl_.bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.return_call_stack_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.return_context_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.return_symbol_info_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.use_invasive_breakpoints_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.unsafe_memory_mode_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.auto_disable_breakpoints_mode_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.kill_process_on_disconnect_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::OptionsRequest, _impl_.symbol_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisassembleAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisassembleAddressRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisassembleAddressRequest, _impl_.size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Instruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Instruction, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Instruction, _impl_.mnemonic_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Instruction, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::Instruction, _impl_.bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisassembleAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::DisassembleAddressResponse, _impl_.instructions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GenericResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GenericResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GenericResponse, _impl_.last_error_code_),
  PROTOBUF_FIELD_OFFSET(::TED::Grpc::GenericResponse, _impl_.error_message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::TED::Grpc::Empty)},
  { 6, -1, -1, sizeof(::TED::Grpc::SegmentRegisters)},
  { 18, -1, -1, sizeof(::TED::Grpc::DebugRegisters)},
  { 30, -1, -1, sizeof(::TED::Grpc::GeneralRegisters)},
  { 45, -1, -1, sizeof(::TED::Grpc::GeneralRegistersX64)},
  { 59, -1, -1, sizeof(::TED::Grpc::Context)},
  { 70, -1, -1, sizeof(::TED::Grpc::Symbols)},
  { 77, -1, -1, sizeof(::TED::Grpc::StackFrame)},
  { 89, -1, -1, sizeof(::TED::Grpc::CallStack)},
  { 96, -1, -1, sizeof(::TED::Grpc::BreakpointResponse)},
  { 108, -1, -1, sizeof(::TED::Grpc::ExecutableSection)},
  { 117, -1, -1, sizeof(::TED::Grpc::ModuleInfo)},
  { 127, -1, -1, sizeof(::TED::Grpc::GetModulesResponse)},
  { 134, -1, -1, sizeof(::TED::Grpc::EnableBreakAllCallsInModuleRequest)},
  { 141, -1, -1, sizeof(::TED::Grpc::DisableBreakAllCallsInModuleRequest)},
  { 148, -1, -1, sizeof(::TED::Grpc::EnableBreakCallByAddressRequest)},
  { 155, -1, -1, sizeof(::TED::Grpc::DisableBreakCallByAddressRequest)},
  { 162, -1, -1, sizeof(::TED::Grpc::EnableBreakCallByNameRequest)},
  { 169, -1, -1, sizeof(::TED::Grpc::DisableBreakCallByNameRequest)},
  { 176, -1, -1, sizeof(::TED::Grpc::EnableBreakpointByAddressRequest)},
  { 183, -1, -1, sizeof(::TED::Grpc::DisableBreakpointByAddressRequest)},
  { 190, -1, -1, sizeof(::TED::Grpc::EnableBreakpointByNameRequest)},
  { 197, -1, -1, sizeof(::TED::Grpc::DisableBreakpointByNameRequest)},
  { 204, -1, -1, sizeof(::TED::Grpc::LoadModuleRequest)},
  { 211, -1, -1, sizeof(::TED::Grpc::UnloadModuleRequest)},
  { 218, -1, -1, sizeof(::TED::Grpc::ReadMemoryRequest)},
  { 226, -1, -1, sizeof(::TED::Grpc::ReadMemoryResponse)},
  { 233, -1, -1, sizeof(::TED::Grpc::WriteMemoryRequest)},
  { 241, -1, -1, sizeof(::TED::Grpc::OptionsRequest)},
  { 255, -1, -1, sizeof(::TED::Grpc::DisassembleAddressRequest)},
  { 263, -1, -1, sizeof(::TED::Grpc::Instruction)},
  { 273, -1, -1, sizeof(::TED::Grpc::DisassembleAddressResponse)},
  { 280, -1, -1, sizeof(::TED::Grpc::GenericResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::TED::Grpc::_Empty_default_instance_._instance,
  &::TED::Grpc::_SegmentRegisters_default_instance_._instance,
  &::TED::Grpc::_DebugRegisters_default_instance_._instance,
  &::TED::Grpc::_GeneralRegisters_default_instance_._instance,
  &::TED::Grpc::_GeneralRegistersX64_default_instance_._instance,
  &::TED::Grpc::_Context_default_instance_._instance,
  &::TED::Grpc::_Symbols_default_instance_._instance,
  &::TED::Grpc::_StackFrame_default_instance_._instance,
  &::TED::Grpc::_CallStack_default_instance_._instance,
  &::TED::Grpc::_BreakpointResponse_default_instance_._instance,
  &::TED::Grpc::_ExecutableSection_default_instance_._instance,
  &::TED::Grpc::_ModuleInfo_default_instance_._instance,
  &::TED::Grpc::_GetModulesResponse_default_instance_._instance,
  &::TED::Grpc::_EnableBreakAllCallsInModuleRequest_default_instance_._instance,
  &::TED::Grpc::_DisableBreakAllCallsInModuleRequest_default_instance_._instance,
  &::TED::Grpc::_EnableBreakCallByAddressRequest_default_instance_._instance,
  &::TED::Grpc::_DisableBreakCallByAddressRequest_default_instance_._instance,
  &::TED::Grpc::_EnableBreakCallByNameRequest_default_instance_._instance,
  &::TED::Grpc::_DisableBreakCallByNameRequest_default_instance_._instance,
  &::TED::Grpc::_EnableBreakpointByAddressRequest_default_instance_._instance,
  &::TED::Grpc::_DisableBreakpointByAddressRequest_default_instance_._instance,
  &::TED::Grpc::_EnableBreakpointByNameRequest_default_instance_._instance,
  &::TED::Grpc::_DisableBreakpointByNameRequest_default_instance_._instance,
  &::TED::Grpc::_LoadModuleRequest_default_instance_._instance,
  &::TED::Grpc::_UnloadModuleRequest_default_instance_._instance,
  &::TED::Grpc::_ReadMemoryRequest_default_instance_._instance,
  &::TED::Grpc::_ReadMemoryResponse_default_instance_._instance,
  &::TED::Grpc::_WriteMemoryRequest_default_instance_._instance,
  &::TED::Grpc::_OptionsRequest_default_instance_._instance,
  &::TED::Grpc::_DisassembleAddressRequest_default_instance_._instance,
  &::TED::Grpc::_Instruction_default_instance_._instance,
  &::TED::Grpc::_DisassembleAddressResponse_default_instance_._instance,
  &::TED::Grpc::_GenericResponse_default_instance_._instance,
};

const char descriptor_table_protodef_TED_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tTED.proto\022\010TED.Grpc\"\007\n\005Empty\"Z\n\020Segmen"
  "tRegisters\022\n\n\002cs\030\001 \001(\r\022\n\n\002ds\030\002 \001(\r\022\n\n\002es"
  "\030\003 \001(\r\022\n\n\002fs\030\004 \001(\r\022\n\n\002gs\030\005 \001(\r\022\n\n\002ss\030\006 \001"
  "(\r\"^\n\016DebugRegisters\022\013\n\003dr0\030\001 \001(\004\022\013\n\003dr1"
  "\030\002 \001(\004\022\013\n\003dr2\030\003 \001(\004\022\013\n\003dr3\030\004 \001(\004\022\013\n\003dr6\030"
  "\005 \001(\004\022\013\n\003dr7\030\006 \001(\004\"\207\001\n\020GeneralRegisters\022"
  "\013\n\003rax\030\001 \001(\004\022\013\n\003rcx\030\002 \001(\004\022\013\n\003rdx\030\003 \001(\004\022\013"
  "\n\003rbx\030\004 \001(\004\022\013\n\003rsp\030\005 \001(\004\022\013\n\003rbp\030\006 \001(\004\022\013\n"
  "\003rsi\030\007 \001(\004\022\013\n\003rdi\030\010 \001(\004\022\013\n\003rip\030\t \001(\004\"{\n\023"
  "GeneralRegistersX64\022\n\n\002r8\030\001 \001(\004\022\n\n\002r9\030\002 "
  "\001(\004\022\013\n\003r10\030\003 \001(\004\022\013\n\003r11\030\004 \001(\004\022\013\n\003r12\030\005 \001"
  "(\004\022\013\n\003r13\030\006 \001(\004\022\013\n\003r14\030\007 \001(\004\022\013\n\003r15\030\010 \001("
  "\004\"\201\002\n\007Context\0225\n\021segment_registers\030\001 \001(\013"
  "2\032.TED.Grpc.SegmentRegisters\0221\n\017debug_re"
  "gisters\030\002 \001(\0132\030.TED.Grpc.DebugRegisters\022"
  "5\n\021general_registers\030\003 \001(\0132\032.TED.Grpc.Ge"
  "neralRegisters\022<\n\025general_registers_x64\030"
  "\004 \001(\0132\035.TED.Grpc.GeneralRegistersX64\022\027\n\017"
  "processor_flags\030\005 \001(\005\" \n\007Symbols\022\025\n\rfunc"
  "tion_name\030\001 \001(\t\"\227\001\n\nStackFrame\022\013\n\003rip\030\001 "
  "\001(\004\022\026\n\016return_address\030\002 \001(\004\022\025\n\rframe_poi"
  "nter\030\003 \001(\004\022\025\n\rstack_pointer\030\004 \001(\004\022\022\n\npar"
  "ameters\030\005 \003(\004\022\"\n\007symbols\030\006 \001(\0132\021.TED.Grp"
  "c.Symbols\"6\n\tCallStack\022)\n\013stack_frame\030\001 "
  "\003(\0132\024.TED.Grpc.StackFrame\"\275\001\n\022Breakpoint"
  "Response\022\022\n\nprocess_id\030\001 \001(\r\022\021\n\tthread_i"
  "d\030\002 \001(\r\022\026\n\016source_address\030\003 \001(\004\022\033\n\023desti"
  "nation_address\030\004 \001(\004\022\"\n\007context\030\005 \001(\0132\021."
  "TED.Grpc.Context\022\'\n\ncall_stack\030\006 \001(\0132\023.T"
  "ED.Grpc.CallStack\"@\n\021ExecutableSection\022\014"
  "\n\004name\030\001 \001(\t\022\017\n\007address\030\002 \001(\004\022\014\n\004size\030\003 "
  "\001(\004\"x\n\nModuleInfo\022\014\n\004name\030\001 \001(\t\022\024\n\014base_"
  "address\030\002 \001(\004\022\014\n\004size\030\003 \001(\004\0228\n\023executabl"
  "e_sections\030\004 \003(\0132\033.TED.Grpc.ExecutableSe"
  "ction\"\?\n\022GetModulesResponse\022)\n\013module_in"
  "fo\030\001 \003(\0132\024.TED.Grpc.ModuleInfo\"9\n\"Enable"
  "BreakAllCallsInModuleRequest\022\023\n\013module_n"
  "ame\030\001 \001(\t\":\n#DisableBreakAllCallsInModul"
  "eRequest\022\023\n\013module_name\030\001 \001(\t\"2\n\037EnableB"
  "reakCallByAddressRequest\022\017\n\007address\030\001 \001("
  "\004\"3\n DisableBreakCallByAddressRequest\022\017\n"
  "\007address\030\001 \001(\004\",\n\034EnableBreakCallByNameR"
  "equest\022\014\n\004name\030\001 \001(\t\"-\n\035DisableBreakCall"
  "ByNameRequest\022\014\n\004name\030\001 \001(\t\"3\n EnableBre"
  "akpointByAddressRequest\022\017\n\007address\030\001 \001(\004"
  "\"4\n!DisableBreakpointByAddressRequest\022\017\n"
  "\007address\030\001 \001(\004\"-\n\035EnableBreakpointByName"
  "Request\022\014\n\004name\030\001 \001(\t\".\n\036DisableBreakpoi"
  "ntByNameRequest\022\014\n\004name\030\001 \001(\t\"!\n\021LoadMod"
  "uleRequest\022\014\n\004path\030\001 \001(\t\"#\n\023UnloadModule"
  "Request\022\014\n\004path\030\001 \001(\t\"2\n\021ReadMemoryReque"
  "st\022\017\n\007address\030\001 \001(\004\022\014\n\004size\030\002 \001(\r\"#\n\022Rea"
  "dMemoryResponse\022\r\n\005bytes\030\001 \001(\014\"4\n\022WriteM"
  "emoryRequest\022\017\n\007address\030\001 \001(\004\022\r\n\005bytes\030\002"
  " \001(\014\"\375\001\n\016OptionsRequest\022\031\n\021return_call_s"
  "tack\030\001 \001(\010\022\026\n\016return_context\030\002 \001(\010\022\032\n\022re"
  "turn_symbol_info\030\003 \001(\010\022 \n\030use_invasive_b"
  "reakpoints\030\004 \001(\010\022\032\n\022unsafe_memory_mode\030\005"
  " \001(\010\022%\n\035auto_disable_breakpoints_mode\030\006 "
  "\001(\010\022\"\n\032kill_process_on_disconnect\030\007 \001(\010\022"
  "\023\n\013symbol_path\030\010 \001(\t\":\n\031DisassembleAddre"
  "ssRequest\022\017\n\007address\030\001 \001(\004\022\014\n\004size\030\002 \001(\r"
  "\"M\n\013Instruction\022\017\n\007address\030\001 \001(\004\022\020\n\010mnem"
  "onic\030\002 \001(\t\022\014\n\004text\030\003 \001(\t\022\r\n\005bytes\030\004 \001(\014\""
  "I\n\032DisassembleAddressResponse\022+\n\014instruc"
  "tions\030\001 \003(\0132\025.TED.Grpc.Instruction\"R\n\017Ge"
  "nericResponse\022\017\n\007success\030\001 \001(\010\022\027\n\017last_e"
  "rror_code\030\002 \003(\r\022\025\n\rerror_message\030\003 \003(\t2\230"
  "\017\n\nTEDService\022C\n\016GetBreakpoints\022\017.TED.Gr"
  "pc.Empty\032\034.TED.Grpc.BreakpointResponse\"\000"
  "0\001\022=\n\nGetModules\022\017.TED.Grpc.Empty\032\034.TED."
  "Grpc.GetModulesResponse\"\000\022h\n\033EnableBreak"
  "AllCallsInModule\022,.TED.Grpc.EnableBreakA"
  "llCallsInModuleRequest\032\031.TED.Grpc.Generi"
  "cResponse\"\000\022j\n\034DisableBreakAllCallsInMod"
  "ule\022-.TED.Grpc.DisableBreakAllCallsInMod"
  "uleRequest\032\031.TED.Grpc.GenericResponse\"\000\022"
  "b\n\030EnableBreakCallByAddress\022).TED.Grpc.E"
  "nableBreakCallByAddressRequest\032\031.TED.Grp"
  "c.GenericResponse\"\000\022d\n\031DisableBreakCallB"
  "yAddress\022*.TED.Grpc.DisableBreakCallByAd"
  "dressRequest\032\031.TED.Grpc.GenericResponse\""
  "\000\022\\\n\025EnableBreakCallByName\022&.TED.Grpc.En"
  "ableBreakCallByNameRequest\032\031.TED.Grpc.Ge"
  "nericResponse\"\000\022^\n\026DisableBreakCallByNam"
  "e\022\'.TED.Grpc.DisableBreakCallByNameReque"
  "st\032\031.TED.Grpc.GenericResponse\"\000\022d\n\031Enabl"
  "eBreakpointByAddress\022*.TED.Grpc.EnableBr"
  "eakpointByAddressRequest\032\031.TED.Grpc.Gene"
  "ricResponse\"\000\022f\n\032DisableBreakpointByAddr"
  "ess\022+.TED.Grpc.DisableBreakpointByAddres"
  "sRequest\032\031.TED.Grpc.GenericResponse\"\000\022^\n"
  "\026EnableBreakpointByName\022\'.TED.Grpc.Enabl"
  "eBreakpointByNameRequest\032\031.TED.Grpc.Gene"
  "ricResponse\"\000\022`\n\027DisableBreakpointByName"
  "\022(.TED.Grpc.DisableBreakpointByNameReque"
  "st\032\031.TED.Grpc.GenericResponse\"\000\022a\n\022Disas"
  "sembleAddress\022#.TED.Grpc.DisassembleAddr"
  "essRequest\032$.TED.Grpc.DisassembleAddress"
  "Response\"\000\022F\n\nLoadModule\022\033.TED.Grpc.Load"
  "ModuleRequest\032\031.TED.Grpc.GenericResponse"
  "\"\000\022J\n\014UnloadModule\022\035.TED.Grpc.UnloadModu"
  "leRequest\032\031.TED.Grpc.GenericResponse\"\000\022I"
  "\n\nReadMemory\022\033.TED.Grpc.ReadMemoryReques"
  "t\032\034.TED.Grpc.ReadMemoryResponse\"\000\022H\n\013Wri"
  "teMemory\022\034.TED.Grpc.WriteMemoryRequest\032\031"
  ".TED.Grpc.GenericResponse\"\000\022=\n\rCreateCon"
  "sole\022\017.TED.Grpc.Empty\032\031.TED.Grpc.Generic"
  "Response\"\000\022>\n\016DestroyConsole\022\017.TED.Grpc."
  "Empty\032\031.TED.Grpc.GenericResponse\"\000\022E\n\025En"
  "ableInternalLogging\022\017.TED.Grpc.Empty\032\031.T"
  "ED.Grpc.GenericResponse\"\000\022F\n\026DisableInte"
  "rnalLogging\022\017.TED.Grpc.Empty\032\031.TED.Grpc."
  "GenericResponse\"\000\022@\n\007Options\022\030.TED.Grpc."
  "OptionsRequest\032\031.TED.Grpc.GenericRespons"
  "e\"\000\022<\n\014TestFunction\022\017.TED.Grpc.Empty\032\031.T"
  "ED.Grpc.GenericResponse\"\000B!\n\023io.grpc.ted"
  ".serviceB\010TEDProtoP\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_TED_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_TED_2eproto = {
    false, false, 4708, descriptor_table_protodef_TED_2eproto,
    "TED.proto",
    &descriptor_table_TED_2eproto_once, nullptr, 0, 33,
    schemas, file_default_instances, TableStruct_TED_2eproto::offsets,
    file_level_metadata_TED_2eproto, file_level_enum_descriptors_TED_2eproto,
    file_level_service_descriptors_TED_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_TED_2eproto_getter() {
  return &descriptor_table_TED_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_TED_2eproto(&descriptor_table_TED_2eproto);
namespace TED {
namespace Grpc {

// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Empty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.Empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[0]);
}

// ===================================================================

class SegmentRegisters::_Internal {
 public:
};

SegmentRegisters::SegmentRegisters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.SegmentRegisters)
}
SegmentRegisters::SegmentRegisters(const SegmentRegisters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SegmentRegisters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cs_){}
    , decltype(_impl_.ds_){}
    , decltype(_impl_.es_){}
    , decltype(_impl_.fs_){}
    , decltype(_impl_.gs_){}
    , decltype(_impl_.ss_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.cs_, &from._impl_.cs_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ss_) -
    reinterpret_cast<char*>(&_impl_.cs_)) + sizeof(_impl_.ss_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.SegmentRegisters)
}

inline void SegmentRegisters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cs_){0u}
    , decltype(_impl_.ds_){0u}
    , decltype(_impl_.es_){0u}
    , decltype(_impl_.fs_){0u}
    , decltype(_impl_.gs_){0u}
    , decltype(_impl_.ss_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SegmentRegisters::~SegmentRegisters() {
  // @@protoc_insertion_point(destructor:TED.Grpc.SegmentRegisters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SegmentRegisters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SegmentRegisters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SegmentRegisters::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.SegmentRegisters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.cs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ss_) -
      reinterpret_cast<char*>(&_impl_.cs_)) + sizeof(_impl_.ss_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SegmentRegisters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 cs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 es = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.es_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 fs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.fs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 gs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.gs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ss = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.ss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SegmentRegisters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.SegmentRegisters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cs = 1;
  if (this->_internal_cs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_cs(), target);
  }

  // uint32 ds = 2;
  if (this->_internal_ds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ds(), target);
  }

  // uint32 es = 3;
  if (this->_internal_es() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_es(), target);
  }

  // uint32 fs = 4;
  if (this->_internal_fs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_fs(), target);
  }

  // uint32 gs = 5;
  if (this->_internal_gs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_gs(), target);
  }

  // uint32 ss = 6;
  if (this->_internal_ss() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ss(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.SegmentRegisters)
  return target;
}

size_t SegmentRegisters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.SegmentRegisters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 cs = 1;
  if (this->_internal_cs() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_cs());
  }

  // uint32 ds = 2;
  if (this->_internal_ds() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ds());
  }

  // uint32 es = 3;
  if (this->_internal_es() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_es());
  }

  // uint32 fs = 4;
  if (this->_internal_fs() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_fs());
  }

  // uint32 gs = 5;
  if (this->_internal_gs() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_gs());
  }

  // uint32 ss = 6;
  if (this->_internal_ss() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_ss());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SegmentRegisters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SegmentRegisters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SegmentRegisters::GetClassData() const { return &_class_data_; }


void SegmentRegisters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SegmentRegisters*>(&to_msg);
  auto& from = static_cast<const SegmentRegisters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.SegmentRegisters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cs() != 0) {
    _this->_internal_set_cs(from._internal_cs());
  }
  if (from._internal_ds() != 0) {
    _this->_internal_set_ds(from._internal_ds());
  }
  if (from._internal_es() != 0) {
    _this->_internal_set_es(from._internal_es());
  }
  if (from._internal_fs() != 0) {
    _this->_internal_set_fs(from._internal_fs());
  }
  if (from._internal_gs() != 0) {
    _this->_internal_set_gs(from._internal_gs());
  }
  if (from._internal_ss() != 0) {
    _this->_internal_set_ss(from._internal_ss());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SegmentRegisters::CopyFrom(const SegmentRegisters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.SegmentRegisters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentRegisters::IsInitialized() const {
  return true;
}

void SegmentRegisters::InternalSwap(SegmentRegisters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SegmentRegisters, _impl_.ss_)
      + sizeof(SegmentRegisters::_impl_.ss_)
      - PROTOBUF_FIELD_OFFSET(SegmentRegisters, _impl_.cs_)>(
          reinterpret_cast<char*>(&_impl_.cs_),
          reinterpret_cast<char*>(&other->_impl_.cs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SegmentRegisters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[1]);
}

// ===================================================================

class DebugRegisters::_Internal {
 public:
};

DebugRegisters::DebugRegisters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DebugRegisters)
}
DebugRegisters::DebugRegisters(const DebugRegisters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DebugRegisters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dr0_){}
    , decltype(_impl_.dr1_){}
    , decltype(_impl_.dr2_){}
    , decltype(_impl_.dr3_){}
    , decltype(_impl_.dr6_){}
    , decltype(_impl_.dr7_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.dr0_, &from._impl_.dr0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dr7_) -
    reinterpret_cast<char*>(&_impl_.dr0_)) + sizeof(_impl_.dr7_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DebugRegisters)
}

inline void DebugRegisters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dr0_){uint64_t{0u}}
    , decltype(_impl_.dr1_){uint64_t{0u}}
    , decltype(_impl_.dr2_){uint64_t{0u}}
    , decltype(_impl_.dr3_){uint64_t{0u}}
    , decltype(_impl_.dr6_){uint64_t{0u}}
    , decltype(_impl_.dr7_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DebugRegisters::~DebugRegisters() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DebugRegisters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DebugRegisters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DebugRegisters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DebugRegisters::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DebugRegisters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.dr0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dr7_) -
      reinterpret_cast<char*>(&_impl_.dr0_)) + sizeof(_impl_.dr7_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DebugRegisters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 dr0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.dr0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 dr1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.dr1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 dr2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.dr2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 dr3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.dr3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 dr6 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.dr6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 dr7 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.dr7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DebugRegisters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DebugRegisters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dr0 = 1;
  if (this->_internal_dr0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_dr0(), target);
  }

  // uint64 dr1 = 2;
  if (this->_internal_dr1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_dr1(), target);
  }

  // uint64 dr2 = 3;
  if (this->_internal_dr2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_dr2(), target);
  }

  // uint64 dr3 = 4;
  if (this->_internal_dr3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_dr3(), target);
  }

  // uint64 dr6 = 5;
  if (this->_internal_dr6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_dr6(), target);
  }

  // uint64 dr7 = 6;
  if (this->_internal_dr7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_dr7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DebugRegisters)
  return target;
}

size_t DebugRegisters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DebugRegisters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 dr0 = 1;
  if (this->_internal_dr0() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr0());
  }

  // uint64 dr1 = 2;
  if (this->_internal_dr1() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr1());
  }

  // uint64 dr2 = 3;
  if (this->_internal_dr2() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr2());
  }

  // uint64 dr3 = 4;
  if (this->_internal_dr3() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr3());
  }

  // uint64 dr6 = 5;
  if (this->_internal_dr6() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr6());
  }

  // uint64 dr7 = 6;
  if (this->_internal_dr7() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_dr7());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DebugRegisters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DebugRegisters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DebugRegisters::GetClassData() const { return &_class_data_; }


void DebugRegisters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DebugRegisters*>(&to_msg);
  auto& from = static_cast<const DebugRegisters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DebugRegisters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dr0() != 0) {
    _this->_internal_set_dr0(from._internal_dr0());
  }
  if (from._internal_dr1() != 0) {
    _this->_internal_set_dr1(from._internal_dr1());
  }
  if (from._internal_dr2() != 0) {
    _this->_internal_set_dr2(from._internal_dr2());
  }
  if (from._internal_dr3() != 0) {
    _this->_internal_set_dr3(from._internal_dr3());
  }
  if (from._internal_dr6() != 0) {
    _this->_internal_set_dr6(from._internal_dr6());
  }
  if (from._internal_dr7() != 0) {
    _this->_internal_set_dr7(from._internal_dr7());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DebugRegisters::CopyFrom(const DebugRegisters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DebugRegisters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugRegisters::IsInitialized() const {
  return true;
}

void DebugRegisters::InternalSwap(DebugRegisters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DebugRegisters, _impl_.dr7_)
      + sizeof(DebugRegisters::_impl_.dr7_)
      - PROTOBUF_FIELD_OFFSET(DebugRegisters, _impl_.dr0_)>(
          reinterpret_cast<char*>(&_impl_.dr0_),
          reinterpret_cast<char*>(&other->_impl_.dr0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DebugRegisters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[2]);
}

// ===================================================================

class GeneralRegisters::_Internal {
 public:
};

GeneralRegisters::GeneralRegisters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.GeneralRegisters)
}
GeneralRegisters::GeneralRegisters(const GeneralRegisters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GeneralRegisters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rax_){}
    , decltype(_impl_.rcx_){}
    , decltype(_impl_.rdx_){}
    , decltype(_impl_.rbx_){}
    , decltype(_impl_.rsp_){}
    , decltype(_impl_.rbp_){}
    , decltype(_impl_.rsi_){}
    , decltype(_impl_.rdi_){}
    , decltype(_impl_.rip_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.rax_, &from._impl_.rax_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rip_) -
    reinterpret_cast<char*>(&_impl_.rax_)) + sizeof(_impl_.rip_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.GeneralRegisters)
}

inline void GeneralRegisters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rax_){uint64_t{0u}}
    , decltype(_impl_.rcx_){uint64_t{0u}}
    , decltype(_impl_.rdx_){uint64_t{0u}}
    , decltype(_impl_.rbx_){uint64_t{0u}}
    , decltype(_impl_.rsp_){uint64_t{0u}}
    , decltype(_impl_.rbp_){uint64_t{0u}}
    , decltype(_impl_.rsi_){uint64_t{0u}}
    , decltype(_impl_.rdi_){uint64_t{0u}}
    , decltype(_impl_.rip_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GeneralRegisters::~GeneralRegisters() {
  // @@protoc_insertion_point(destructor:TED.Grpc.GeneralRegisters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GeneralRegisters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GeneralRegisters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GeneralRegisters::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.GeneralRegisters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.rax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.rip_) -
      reinterpret_cast<char*>(&_impl_.rax_)) + sizeof(_impl_.rip_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneralRegisters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 rax = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.rax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rcx = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rcx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rdx = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.rdx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rbx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.rbx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rsp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.rsp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rbp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.rbp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rsi = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.rsi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rdi = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.rdi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rip = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.rip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GeneralRegisters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.GeneralRegisters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 rax = 1;
  if (this->_internal_rax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rax(), target);
  }

  // uint64 rcx = 2;
  if (this->_internal_rcx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_rcx(), target);
  }

  // uint64 rdx = 3;
  if (this->_internal_rdx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_rdx(), target);
  }

  // uint64 rbx = 4;
  if (this->_internal_rbx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_rbx(), target);
  }

  // uint64 rsp = 5;
  if (this->_internal_rsp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_rsp(), target);
  }

  // uint64 rbp = 6;
  if (this->_internal_rbp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_rbp(), target);
  }

  // uint64 rsi = 7;
  if (this->_internal_rsi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_rsi(), target);
  }

  // uint64 rdi = 8;
  if (this->_internal_rdi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_rdi(), target);
  }

  // uint64 rip = 9;
  if (this->_internal_rip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(9, this->_internal_rip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.GeneralRegisters)
  return target;
}

size_t GeneralRegisters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.GeneralRegisters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 rax = 1;
  if (this->_internal_rax() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rax());
  }

  // uint64 rcx = 2;
  if (this->_internal_rcx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rcx());
  }

  // uint64 rdx = 3;
  if (this->_internal_rdx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rdx());
  }

  // uint64 rbx = 4;
  if (this->_internal_rbx() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rbx());
  }

  // uint64 rsp = 5;
  if (this->_internal_rsp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rsp());
  }

  // uint64 rbp = 6;
  if (this->_internal_rbp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rbp());
  }

  // uint64 rsi = 7;
  if (this->_internal_rsi() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rsi());
  }

  // uint64 rdi = 8;
  if (this->_internal_rdi() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rdi());
  }

  // uint64 rip = 9;
  if (this->_internal_rip() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rip());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GeneralRegisters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GeneralRegisters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GeneralRegisters::GetClassData() const { return &_class_data_; }


void GeneralRegisters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GeneralRegisters*>(&to_msg);
  auto& from = static_cast<const GeneralRegisters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.GeneralRegisters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rax() != 0) {
    _this->_internal_set_rax(from._internal_rax());
  }
  if (from._internal_rcx() != 0) {
    _this->_internal_set_rcx(from._internal_rcx());
  }
  if (from._internal_rdx() != 0) {
    _this->_internal_set_rdx(from._internal_rdx());
  }
  if (from._internal_rbx() != 0) {
    _this->_internal_set_rbx(from._internal_rbx());
  }
  if (from._internal_rsp() != 0) {
    _this->_internal_set_rsp(from._internal_rsp());
  }
  if (from._internal_rbp() != 0) {
    _this->_internal_set_rbp(from._internal_rbp());
  }
  if (from._internal_rsi() != 0) {
    _this->_internal_set_rsi(from._internal_rsi());
  }
  if (from._internal_rdi() != 0) {
    _this->_internal_set_rdi(from._internal_rdi());
  }
  if (from._internal_rip() != 0) {
    _this->_internal_set_rip(from._internal_rip());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GeneralRegisters::CopyFrom(const GeneralRegisters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.GeneralRegisters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralRegisters::IsInitialized() const {
  return true;
}

void GeneralRegisters::InternalSwap(GeneralRegisters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeneralRegisters, _impl_.rip_)
      + sizeof(GeneralRegisters::_impl_.rip_)
      - PROTOBUF_FIELD_OFFSET(GeneralRegisters, _impl_.rax_)>(
          reinterpret_cast<char*>(&_impl_.rax_),
          reinterpret_cast<char*>(&other->_impl_.rax_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneralRegisters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[3]);
}

// ===================================================================

class GeneralRegistersX64::_Internal {
 public:
};

GeneralRegistersX64::GeneralRegistersX64(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.GeneralRegistersX64)
}
GeneralRegistersX64::GeneralRegistersX64(const GeneralRegistersX64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GeneralRegistersX64* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.r8_){}
    , decltype(_impl_.r9_){}
    , decltype(_impl_.r10_){}
    , decltype(_impl_.r11_){}
    , decltype(_impl_.r12_){}
    , decltype(_impl_.r13_){}
    , decltype(_impl_.r14_){}
    , decltype(_impl_.r15_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.r8_, &from._impl_.r8_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.r15_) -
    reinterpret_cast<char*>(&_impl_.r8_)) + sizeof(_impl_.r15_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.GeneralRegistersX64)
}

inline void GeneralRegistersX64::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.r8_){uint64_t{0u}}
    , decltype(_impl_.r9_){uint64_t{0u}}
    , decltype(_impl_.r10_){uint64_t{0u}}
    , decltype(_impl_.r11_){uint64_t{0u}}
    , decltype(_impl_.r12_){uint64_t{0u}}
    , decltype(_impl_.r13_){uint64_t{0u}}
    , decltype(_impl_.r14_){uint64_t{0u}}
    , decltype(_impl_.r15_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GeneralRegistersX64::~GeneralRegistersX64() {
  // @@protoc_insertion_point(destructor:TED.Grpc.GeneralRegistersX64)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GeneralRegistersX64::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GeneralRegistersX64::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GeneralRegistersX64::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.GeneralRegistersX64)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.r8_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.r15_) -
      reinterpret_cast<char*>(&_impl_.r8_)) + sizeof(_impl_.r15_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneralRegistersX64::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 r8 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.r8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r9 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.r9_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r10 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.r10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r11 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.r11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r12 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.r12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r13 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.r13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r14 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.r14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 r15 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.r15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GeneralRegistersX64::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.GeneralRegistersX64)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 r8 = 1;
  if (this->_internal_r8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_r8(), target);
  }

  // uint64 r9 = 2;
  if (this->_internal_r9() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_r9(), target);
  }

  // uint64 r10 = 3;
  if (this->_internal_r10() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_r10(), target);
  }

  // uint64 r11 = 4;
  if (this->_internal_r11() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_r11(), target);
  }

  // uint64 r12 = 5;
  if (this->_internal_r12() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_r12(), target);
  }

  // uint64 r13 = 6;
  if (this->_internal_r13() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_r13(), target);
  }

  // uint64 r14 = 7;
  if (this->_internal_r14() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(7, this->_internal_r14(), target);
  }

  // uint64 r15 = 8;
  if (this->_internal_r15() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(8, this->_internal_r15(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.GeneralRegistersX64)
  return target;
}

size_t GeneralRegistersX64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.GeneralRegistersX64)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 r8 = 1;
  if (this->_internal_r8() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r8());
  }

  // uint64 r9 = 2;
  if (this->_internal_r9() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r9());
  }

  // uint64 r10 = 3;
  if (this->_internal_r10() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r10());
  }

  // uint64 r11 = 4;
  if (this->_internal_r11() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r11());
  }

  // uint64 r12 = 5;
  if (this->_internal_r12() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r12());
  }

  // uint64 r13 = 6;
  if (this->_internal_r13() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r13());
  }

  // uint64 r14 = 7;
  if (this->_internal_r14() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r14());
  }

  // uint64 r15 = 8;
  if (this->_internal_r15() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_r15());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GeneralRegistersX64::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GeneralRegistersX64::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GeneralRegistersX64::GetClassData() const { return &_class_data_; }


void GeneralRegistersX64::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GeneralRegistersX64*>(&to_msg);
  auto& from = static_cast<const GeneralRegistersX64&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.GeneralRegistersX64)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_r8() != 0) {
    _this->_internal_set_r8(from._internal_r8());
  }
  if (from._internal_r9() != 0) {
    _this->_internal_set_r9(from._internal_r9());
  }
  if (from._internal_r10() != 0) {
    _this->_internal_set_r10(from._internal_r10());
  }
  if (from._internal_r11() != 0) {
    _this->_internal_set_r11(from._internal_r11());
  }
  if (from._internal_r12() != 0) {
    _this->_internal_set_r12(from._internal_r12());
  }
  if (from._internal_r13() != 0) {
    _this->_internal_set_r13(from._internal_r13());
  }
  if (from._internal_r14() != 0) {
    _this->_internal_set_r14(from._internal_r14());
  }
  if (from._internal_r15() != 0) {
    _this->_internal_set_r15(from._internal_r15());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GeneralRegistersX64::CopyFrom(const GeneralRegistersX64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.GeneralRegistersX64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralRegistersX64::IsInitialized() const {
  return true;
}

void GeneralRegistersX64::InternalSwap(GeneralRegistersX64* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeneralRegistersX64, _impl_.r15_)
      + sizeof(GeneralRegistersX64::_impl_.r15_)
      - PROTOBUF_FIELD_OFFSET(GeneralRegistersX64, _impl_.r8_)>(
          reinterpret_cast<char*>(&_impl_.r8_),
          reinterpret_cast<char*>(&other->_impl_.r8_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneralRegistersX64::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[4]);
}

// ===================================================================

class Context::_Internal {
 public:
  static const ::TED::Grpc::SegmentRegisters& segment_registers(const Context* msg);
  static const ::TED::Grpc::DebugRegisters& debug_registers(const Context* msg);
  static const ::TED::Grpc::GeneralRegisters& general_registers(const Context* msg);
  static const ::TED::Grpc::GeneralRegistersX64& general_registers_x64(const Context* msg);
};

const ::TED::Grpc::SegmentRegisters&
Context::_Internal::segment_registers(const Context* msg) {
  return *msg->_impl_.segment_registers_;
}
const ::TED::Grpc::DebugRegisters&
Context::_Internal::debug_registers(const Context* msg) {
  return *msg->_impl_.debug_registers_;
}
const ::TED::Grpc::GeneralRegisters&
Context::_Internal::general_registers(const Context* msg) {
  return *msg->_impl_.general_registers_;
}
const ::TED::Grpc::GeneralRegistersX64&
Context::_Internal::general_registers_x64(const Context* msg) {
  return *msg->_impl_.general_registers_x64_;
}
Context::Context(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.Context)
}
Context::Context(const Context& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Context* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.segment_registers_){nullptr}
    , decltype(_impl_.debug_registers_){nullptr}
    , decltype(_impl_.general_registers_){nullptr}
    , decltype(_impl_.general_registers_x64_){nullptr}
    , decltype(_impl_.processor_flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_segment_registers()) {
    _this->_impl_.segment_registers_ = new ::TED::Grpc::SegmentRegisters(*from._impl_.segment_registers_);
  }
  if (from._internal_has_debug_registers()) {
    _this->_impl_.debug_registers_ = new ::TED::Grpc::DebugRegisters(*from._impl_.debug_registers_);
  }
  if (from._internal_has_general_registers()) {
    _this->_impl_.general_registers_ = new ::TED::Grpc::GeneralRegisters(*from._impl_.general_registers_);
  }
  if (from._internal_has_general_registers_x64()) {
    _this->_impl_.general_registers_x64_ = new ::TED::Grpc::GeneralRegistersX64(*from._impl_.general_registers_x64_);
  }
  _this->_impl_.processor_flags_ = from._impl_.processor_flags_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.Context)
}

inline void Context::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.segment_registers_){nullptr}
    , decltype(_impl_.debug_registers_){nullptr}
    , decltype(_impl_.general_registers_){nullptr}
    , decltype(_impl_.general_registers_x64_){nullptr}
    , decltype(_impl_.processor_flags_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:TED.Grpc.Context)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Context::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.segment_registers_;
  if (this != internal_default_instance()) delete _impl_.debug_registers_;
  if (this != internal_default_instance()) delete _impl_.general_registers_;
  if (this != internal_default_instance()) delete _impl_.general_registers_x64_;
}

void Context::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.Context)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.segment_registers_ != nullptr) {
    delete _impl_.segment_registers_;
  }
  _impl_.segment_registers_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.debug_registers_ != nullptr) {
    delete _impl_.debug_registers_;
  }
  _impl_.debug_registers_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.general_registers_ != nullptr) {
    delete _impl_.general_registers_;
  }
  _impl_.general_registers_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.general_registers_x64_ != nullptr) {
    delete _impl_.general_registers_x64_;
  }
  _impl_.general_registers_x64_ = nullptr;
  _impl_.processor_flags_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Context::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TED.Grpc.SegmentRegisters segment_registers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_segment_registers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.DebugRegisters debug_registers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_debug_registers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.GeneralRegisters general_registers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_general_registers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.GeneralRegistersX64 general_registers_x64 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_general_registers_x64(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 processor_flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.processor_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Context::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.Context)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TED.Grpc.SegmentRegisters segment_registers = 1;
  if (this->_internal_has_segment_registers()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::segment_registers(this),
        _Internal::segment_registers(this).GetCachedSize(), target, stream);
  }

  // .TED.Grpc.DebugRegisters debug_registers = 2;
  if (this->_internal_has_debug_registers()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::debug_registers(this),
        _Internal::debug_registers(this).GetCachedSize(), target, stream);
  }

  // .TED.Grpc.GeneralRegisters general_registers = 3;
  if (this->_internal_has_general_registers()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::general_registers(this),
        _Internal::general_registers(this).GetCachedSize(), target, stream);
  }

  // .TED.Grpc.GeneralRegistersX64 general_registers_x64 = 4;
  if (this->_internal_has_general_registers_x64()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::general_registers_x64(this),
        _Internal::general_registers_x64(this).GetCachedSize(), target, stream);
  }

  // int32 processor_flags = 5;
  if (this->_internal_processor_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_processor_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.Context)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TED.Grpc.SegmentRegisters segment_registers = 1;
  if (this->_internal_has_segment_registers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.segment_registers_);
  }

  // .TED.Grpc.DebugRegisters debug_registers = 2;
  if (this->_internal_has_debug_registers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.debug_registers_);
  }

  // .TED.Grpc.GeneralRegisters general_registers = 3;
  if (this->_internal_has_general_registers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.general_registers_);
  }

  // .TED.Grpc.GeneralRegistersX64 general_registers_x64 = 4;
  if (this->_internal_has_general_registers_x64()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.general_registers_x64_);
  }

  // int32 processor_flags = 5;
  if (this->_internal_processor_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_processor_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Context::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Context::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Context::GetClassData() const { return &_class_data_; }


void Context::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Context*>(&to_msg);
  auto& from = static_cast<const Context&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.Context)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_segment_registers()) {
    _this->_internal_mutable_segment_registers()->::TED::Grpc::SegmentRegisters::MergeFrom(
        from._internal_segment_registers());
  }
  if (from._internal_has_debug_registers()) {
    _this->_internal_mutable_debug_registers()->::TED::Grpc::DebugRegisters::MergeFrom(
        from._internal_debug_registers());
  }
  if (from._internal_has_general_registers()) {
    _this->_internal_mutable_general_registers()->::TED::Grpc::GeneralRegisters::MergeFrom(
        from._internal_general_registers());
  }
  if (from._internal_has_general_registers_x64()) {
    _this->_internal_mutable_general_registers_x64()->::TED::Grpc::GeneralRegistersX64::MergeFrom(
        from._internal_general_registers_x64());
  }
  if (from._internal_processor_flags() != 0) {
    _this->_internal_set_processor_flags(from._internal_processor_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::InternalSwap(Context* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Context, _impl_.processor_flags_)
      + sizeof(Context::_impl_.processor_flags_)
      - PROTOBUF_FIELD_OFFSET(Context, _impl_.segment_registers_)>(
          reinterpret_cast<char*>(&_impl_.segment_registers_),
          reinterpret_cast<char*>(&other->_impl_.segment_registers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Context::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[5]);
}

// ===================================================================

class Symbols::_Internal {
 public:
};

Symbols::Symbols(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.Symbols)
}
Symbols::Symbols(const Symbols& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Symbols* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.function_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function_name().empty()) {
    _this->_impl_.function_name_.Set(from._internal_function_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.Symbols)
}

inline void Symbols::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.function_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Symbols::~Symbols() {
  // @@protoc_insertion_point(destructor:TED.Grpc.Symbols)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Symbols::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.function_name_.Destroy();
}

void Symbols::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Symbols::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.Symbols)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.function_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Symbols::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_function_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.Symbols.function_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Symbols::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.Symbols)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (!this->_internal_function_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_name().data(), static_cast<int>(this->_internal_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.Symbols.function_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_function_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.Symbols)
  return target;
}

size_t Symbols::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.Symbols)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string function_name = 1;
  if (!this->_internal_function_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Symbols::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Symbols::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Symbols::GetClassData() const { return &_class_data_; }


void Symbols::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Symbols*>(&to_msg);
  auto& from = static_cast<const Symbols&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.Symbols)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_function_name().empty()) {
    _this->_internal_set_function_name(from._internal_function_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Symbols::CopyFrom(const Symbols& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.Symbols)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Symbols::IsInitialized() const {
  return true;
}

void Symbols::InternalSwap(Symbols* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_name_, lhs_arena,
      &other->_impl_.function_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Symbols::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[6]);
}

// ===================================================================

class StackFrame::_Internal {
 public:
  static const ::TED::Grpc::Symbols& symbols(const StackFrame* msg);
};

const ::TED::Grpc::Symbols&
StackFrame::_Internal::symbols(const StackFrame* msg) {
  return *msg->_impl_.symbols_;
}
StackFrame::StackFrame(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.StackFrame)
}
StackFrame::StackFrame(const StackFrame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StackFrame* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){from._impl_.parameters_}
    , /*decltype(_impl_._parameters_cached_byte_size_)*/{0}
    , decltype(_impl_.symbols_){nullptr}
    , decltype(_impl_.rip_){}
    , decltype(_impl_.return_address_){}
    , decltype(_impl_.frame_pointer_){}
    , decltype(_impl_.stack_pointer_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_symbols()) {
    _this->_impl_.symbols_ = new ::TED::Grpc::Symbols(*from._impl_.symbols_);
  }
  ::memcpy(&_impl_.rip_, &from._impl_.rip_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.stack_pointer_) -
    reinterpret_cast<char*>(&_impl_.rip_)) + sizeof(_impl_.stack_pointer_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.StackFrame)
}

inline void StackFrame::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){arena}
    , /*decltype(_impl_._parameters_cached_byte_size_)*/{0}
    , decltype(_impl_.symbols_){nullptr}
    , decltype(_impl_.rip_){uint64_t{0u}}
    , decltype(_impl_.return_address_){uint64_t{0u}}
    , decltype(_impl_.frame_pointer_){uint64_t{0u}}
    , decltype(_impl_.stack_pointer_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StackFrame::~StackFrame() {
  // @@protoc_insertion_point(destructor:TED.Grpc.StackFrame)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StackFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.symbols_;
}

void StackFrame::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.StackFrame)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.symbols_ != nullptr) {
    delete _impl_.symbols_;
  }
  _impl_.symbols_ = nullptr;
  ::memset(&_impl_.rip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.stack_pointer_) -
      reinterpret_cast<char*>(&_impl_.rip_)) + sizeof(_impl_.stack_pointer_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StackFrame::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 rip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.rip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 return_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.return_address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 frame_pointer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.frame_pointer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 stack_pointer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.stack_pointer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 parameters = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_parameters(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_parameters(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.Symbols symbols = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_symbols(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StackFrame::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.StackFrame)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 rip = 1;
  if (this->_internal_rip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rip(), target);
  }

  // uint64 return_address = 2;
  if (this->_internal_return_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_return_address(), target);
  }

  // uint64 frame_pointer = 3;
  if (this->_internal_frame_pointer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_frame_pointer(), target);
  }

  // uint64 stack_pointer = 4;
  if (this->_internal_stack_pointer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_stack_pointer(), target);
  }

  // repeated uint64 parameters = 5;
  {
    int byte_size = _impl_._parameters_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_parameters(), byte_size, target);
    }
  }

  // .TED.Grpc.Symbols symbols = 6;
  if (this->_internal_has_symbols()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::symbols(this),
        _Internal::symbols(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.StackFrame)
  return target;
}

size_t StackFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.StackFrame)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 parameters = 5;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.parameters_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._parameters_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .TED.Grpc.Symbols symbols = 6;
  if (this->_internal_has_symbols()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.symbols_);
  }

  // uint64 rip = 1;
  if (this->_internal_rip() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_rip());
  }

  // uint64 return_address = 2;
  if (this->_internal_return_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_return_address());
  }

  // uint64 frame_pointer = 3;
  if (this->_internal_frame_pointer() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_frame_pointer());
  }

  // uint64 stack_pointer = 4;
  if (this->_internal_stack_pointer() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_stack_pointer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StackFrame::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StackFrame::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StackFrame::GetClassData() const { return &_class_data_; }


void StackFrame::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StackFrame*>(&to_msg);
  auto& from = static_cast<const StackFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.StackFrame)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (from._internal_has_symbols()) {
    _this->_internal_mutable_symbols()->::TED::Grpc::Symbols::MergeFrom(
        from._internal_symbols());
  }
  if (from._internal_rip() != 0) {
    _this->_internal_set_rip(from._internal_rip());
  }
  if (from._internal_return_address() != 0) {
    _this->_internal_set_return_address(from._internal_return_address());
  }
  if (from._internal_frame_pointer() != 0) {
    _this->_internal_set_frame_pointer(from._internal_frame_pointer());
  }
  if (from._internal_stack_pointer() != 0) {
    _this->_internal_set_stack_pointer(from._internal_stack_pointer());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrame::CopyFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StackFrame::IsInitialized() const {
  return true;
}

void StackFrame::InternalSwap(StackFrame* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.stack_pointer_)
      + sizeof(StackFrame::_impl_.stack_pointer_)
      - PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.symbols_)>(
          reinterpret_cast<char*>(&_impl_.symbols_),
          reinterpret_cast<char*>(&other->_impl_.symbols_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StackFrame::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[7]);
}

// ===================================================================

class CallStack::_Internal {
 public:
};

CallStack::CallStack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.CallStack)
}
CallStack::CallStack(const CallStack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CallStack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stack_frame_){from._impl_.stack_frame_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.CallStack)
}

inline void CallStack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stack_frame_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CallStack::~CallStack() {
  // @@protoc_insertion_point(destructor:TED.Grpc.CallStack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CallStack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stack_frame_.~RepeatedPtrField();
}

void CallStack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CallStack::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.CallStack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stack_frame_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CallStack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TED.Grpc.StackFrame stack_frame = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stack_frame(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CallStack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.CallStack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TED.Grpc.StackFrame stack_frame = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stack_frame_size()); i < n; i++) {
    const auto& repfield = this->_internal_stack_frame(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.CallStack)
  return target;
}

size_t CallStack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.CallStack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TED.Grpc.StackFrame stack_frame = 1;
  total_size += 1UL * this->_internal_stack_frame_size();
  for (const auto& msg : this->_impl_.stack_frame_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CallStack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CallStack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CallStack::GetClassData() const { return &_class_data_; }


void CallStack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CallStack*>(&to_msg);
  auto& from = static_cast<const CallStack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.CallStack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stack_frame_.MergeFrom(from._impl_.stack_frame_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CallStack::CopyFrom(const CallStack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.CallStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallStack::IsInitialized() const {
  return true;
}

void CallStack::InternalSwap(CallStack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stack_frame_.InternalSwap(&other->_impl_.stack_frame_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CallStack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[8]);
}

// ===================================================================

class BreakpointResponse::_Internal {
 public:
  static const ::TED::Grpc::Context& context(const BreakpointResponse* msg);
  static const ::TED::Grpc::CallStack& call_stack(const BreakpointResponse* msg);
};

const ::TED::Grpc::Context&
BreakpointResponse::_Internal::context(const BreakpointResponse* msg) {
  return *msg->_impl_.context_;
}
const ::TED::Grpc::CallStack&
BreakpointResponse::_Internal::call_stack(const BreakpointResponse* msg) {
  return *msg->_impl_.call_stack_;
}
BreakpointResponse::BreakpointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.BreakpointResponse)
}
BreakpointResponse::BreakpointResponse(const BreakpointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BreakpointResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_){nullptr}
    , decltype(_impl_.call_stack_){nullptr}
    , decltype(_impl_.process_id_){}
    , decltype(_impl_.thread_id_){}
    , decltype(_impl_.source_address_){}
    , decltype(_impl_.destination_address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::TED::Grpc::Context(*from._impl_.context_);
  }
  if (from._internal_has_call_stack()) {
    _this->_impl_.call_stack_ = new ::TED::Grpc::CallStack(*from._impl_.call_stack_);
  }
  ::memcpy(&_impl_.process_id_, &from._impl_.process_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.destination_address_) -
    reinterpret_cast<char*>(&_impl_.process_id_)) + sizeof(_impl_.destination_address_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.BreakpointResponse)
}

inline void BreakpointResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_){nullptr}
    , decltype(_impl_.call_stack_){nullptr}
    , decltype(_impl_.process_id_){0u}
    , decltype(_impl_.thread_id_){0u}
    , decltype(_impl_.source_address_){uint64_t{0u}}
    , decltype(_impl_.destination_address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BreakpointResponse::~BreakpointResponse() {
  // @@protoc_insertion_point(destructor:TED.Grpc.BreakpointResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BreakpointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.context_;
  if (this != internal_default_instance()) delete _impl_.call_stack_;
}

void BreakpointResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BreakpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.BreakpointResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.call_stack_ != nullptr) {
    delete _impl_.call_stack_;
  }
  _impl_.call_stack_ = nullptr;
  ::memset(&_impl_.process_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.destination_address_) -
      reinterpret_cast<char*>(&_impl_.process_id_)) + sizeof(_impl_.destination_address_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BreakpointResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 process_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.process_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 thread_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.thread_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 source_address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.source_address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 destination_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.destination_address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.Context context = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .TED.Grpc.CallStack call_stack = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_call_stack(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BreakpointResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.BreakpointResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 process_id = 1;
  if (this->_internal_process_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_process_id(), target);
  }

  // uint32 thread_id = 2;
  if (this->_internal_thread_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_thread_id(), target);
  }

  // uint64 source_address = 3;
  if (this->_internal_source_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_source_address(), target);
  }

  // uint64 destination_address = 4;
  if (this->_internal_destination_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_destination_address(), target);
  }

  // .TED.Grpc.Context context = 5;
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  // .TED.Grpc.CallStack call_stack = 6;
  if (this->_internal_has_call_stack()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::call_stack(this),
        _Internal::call_stack(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.BreakpointResponse)
  return target;
}

size_t BreakpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.BreakpointResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TED.Grpc.Context context = 5;
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  // .TED.Grpc.CallStack call_stack = 6;
  if (this->_internal_has_call_stack()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.call_stack_);
  }

  // uint32 process_id = 1;
  if (this->_internal_process_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_process_id());
  }

  // uint32 thread_id = 2;
  if (this->_internal_thread_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_thread_id());
  }

  // uint64 source_address = 3;
  if (this->_internal_source_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_source_address());
  }

  // uint64 destination_address = 4;
  if (this->_internal_destination_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_destination_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BreakpointResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BreakpointResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BreakpointResponse::GetClassData() const { return &_class_data_; }


void BreakpointResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BreakpointResponse*>(&to_msg);
  auto& from = static_cast<const BreakpointResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.BreakpointResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::TED::Grpc::Context::MergeFrom(
        from._internal_context());
  }
  if (from._internal_has_call_stack()) {
    _this->_internal_mutable_call_stack()->::TED::Grpc::CallStack::MergeFrom(
        from._internal_call_stack());
  }
  if (from._internal_process_id() != 0) {
    _this->_internal_set_process_id(from._internal_process_id());
  }
  if (from._internal_thread_id() != 0) {
    _this->_internal_set_thread_id(from._internal_thread_id());
  }
  if (from._internal_source_address() != 0) {
    _this->_internal_set_source_address(from._internal_source_address());
  }
  if (from._internal_destination_address() != 0) {
    _this->_internal_set_destination_address(from._internal_destination_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BreakpointResponse::CopyFrom(const BreakpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.BreakpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BreakpointResponse::IsInitialized() const {
  return true;
}

void BreakpointResponse::InternalSwap(BreakpointResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BreakpointResponse, _impl_.destination_address_)
      + sizeof(BreakpointResponse::_impl_.destination_address_)
      - PROTOBUF_FIELD_OFFSET(BreakpointResponse, _impl_.context_)>(
          reinterpret_cast<char*>(&_impl_.context_),
          reinterpret_cast<char*>(&other->_impl_.context_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BreakpointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[9]);
}

// ===================================================================

class ExecutableSection::_Internal {
 public:
};

ExecutableSection::ExecutableSection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.ExecutableSection)
}
ExecutableSection::ExecutableSection(const ExecutableSection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExecutableSection* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.address_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.address_, &from._impl_.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.ExecutableSection)
}

inline void ExecutableSection::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.address_){uint64_t{0u}}
    , decltype(_impl_.size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExecutableSection::~ExecutableSection() {
  // @@protoc_insertion_point(destructor:TED.Grpc.ExecutableSection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExecutableSection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ExecutableSection::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExecutableSection::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.ExecutableSection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecutableSection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.ExecutableSection.name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExecutableSection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.ExecutableSection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.ExecutableSection.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 address = 2;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_address(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.ExecutableSection)
  return target;
}

size_t ExecutableSection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.ExecutableSection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 address = 2;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExecutableSection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExecutableSection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExecutableSection::GetClassData() const { return &_class_data_; }


void ExecutableSection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExecutableSection*>(&to_msg);
  auto& from = static_cast<const ExecutableSection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.ExecutableSection)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExecutableSection::CopyFrom(const ExecutableSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.ExecutableSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutableSection::IsInitialized() const {
  return true;
}

void ExecutableSection::InternalSwap(ExecutableSection* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutableSection, _impl_.size_)
      + sizeof(ExecutableSection::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(ExecutableSection, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecutableSection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[10]);
}

// ===================================================================

class ModuleInfo::_Internal {
 public:
};

ModuleInfo::ModuleInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.ModuleInfo)
}
ModuleInfo::ModuleInfo(const ModuleInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModuleInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.executable_sections_){from._impl_.executable_sections_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.base_address_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.base_address_, &from._impl_.base_address_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.base_address_)) + sizeof(_impl_.size_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.ModuleInfo)
}

inline void ModuleInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.executable_sections_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.base_address_){uint64_t{0u}}
    , decltype(_impl_.size_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleInfo::~ModuleInfo() {
  // @@protoc_insertion_point(destructor:TED.Grpc.ModuleInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executable_sections_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void ModuleInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModuleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.ModuleInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executable_sections_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.base_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.base_address_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.ModuleInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 base_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.base_address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TED.Grpc.ExecutableSection executable_sections = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executable_sections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.ModuleInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.ModuleInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 base_address = 2;
  if (this->_internal_base_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_base_address(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_size(), target);
  }

  // repeated .TED.Grpc.ExecutableSection executable_sections = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executable_sections_size()); i < n; i++) {
    const auto& repfield = this->_internal_executable_sections(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.ModuleInfo)
  return target;
}

size_t ModuleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.ModuleInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TED.Grpc.ExecutableSection executable_sections = 4;
  total_size += 1UL * this->_internal_executable_sections_size();
  for (const auto& msg : this->_impl_.executable_sections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 base_address = 2;
  if (this->_internal_base_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_base_address());
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModuleInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleInfo::GetClassData() const { return &_class_data_; }


void ModuleInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModuleInfo*>(&to_msg);
  auto& from = static_cast<const ModuleInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.ModuleInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executable_sections_.MergeFrom(from._impl_.executable_sections_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_base_address() != 0) {
    _this->_internal_set_base_address(from._internal_base_address());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleInfo::CopyFrom(const ModuleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.ModuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleInfo::IsInitialized() const {
  return true;
}

void ModuleInfo::InternalSwap(ModuleInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.executable_sections_.InternalSwap(&other->_impl_.executable_sections_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleInfo, _impl_.size_)
      + sizeof(ModuleInfo::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(ModuleInfo, _impl_.base_address_)>(
          reinterpret_cast<char*>(&_impl_.base_address_),
          reinterpret_cast<char*>(&other->_impl_.base_address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[11]);
}

// ===================================================================

class GetModulesResponse::_Internal {
 public:
};

GetModulesResponse::GetModulesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.GetModulesResponse)
}
GetModulesResponse::GetModulesResponse(const GetModulesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModulesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_info_){from._impl_.module_info_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.GetModulesResponse)
}

inline void GetModulesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.module_info_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetModulesResponse::~GetModulesResponse() {
  // @@protoc_insertion_point(destructor:TED.Grpc.GetModulesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModulesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_info_.~RepeatedPtrField();
}

void GetModulesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.GetModulesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_info_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModulesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TED.Grpc.ModuleInfo module_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_module_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModulesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.GetModulesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TED.Grpc.ModuleInfo module_info = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_module_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_module_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.GetModulesResponse)
  return target;
}

size_t GetModulesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.GetModulesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TED.Grpc.ModuleInfo module_info = 1;
  total_size += 1UL * this->_internal_module_info_size();
  for (const auto& msg : this->_impl_.module_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModulesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModulesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModulesResponse::GetClassData() const { return &_class_data_; }


void GetModulesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModulesResponse*>(&to_msg);
  auto& from = static_cast<const GetModulesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.GetModulesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.module_info_.MergeFrom(from._impl_.module_info_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModulesResponse::CopyFrom(const GetModulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.GetModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModulesResponse::IsInitialized() const {
  return true;
}

void GetModulesResponse::InternalSwap(GetModulesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.module_info_.InternalSwap(&other->_impl_.module_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModulesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[12]);
}

// ===================================================================

class EnableBreakAllCallsInModuleRequest::_Internal {
 public:
};

EnableBreakAllCallsInModuleRequest::EnableBreakAllCallsInModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.EnableBreakAllCallsInModuleRequest)
}
EnableBreakAllCallsInModuleRequest::EnableBreakAllCallsInModuleRequest(const EnableBreakAllCallsInModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableBreakAllCallsInModuleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_name().empty()) {
    _this->_impl_.module_name_.Set(from._internal_module_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.EnableBreakAllCallsInModuleRequest)
}

inline void EnableBreakAllCallsInModuleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EnableBreakAllCallsInModuleRequest::~EnableBreakAllCallsInModuleRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBreakAllCallsInModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_name_.Destroy();
}

void EnableBreakAllCallsInModuleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableBreakAllCallsInModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBreakAllCallsInModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.EnableBreakAllCallsInModuleRequest.module_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBreakAllCallsInModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_name = 1;
  if (!this->_internal_module_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_name().data(), static_cast<int>(this->_internal_module_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.EnableBreakAllCallsInModuleRequest.module_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  return target;
}

size_t EnableBreakAllCallsInModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_name = 1;
  if (!this->_internal_module_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBreakAllCallsInModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableBreakAllCallsInModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBreakAllCallsInModuleRequest::GetClassData() const { return &_class_data_; }


void EnableBreakAllCallsInModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableBreakAllCallsInModuleRequest*>(&to_msg);
  auto& from = static_cast<const EnableBreakAllCallsInModuleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_name().empty()) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBreakAllCallsInModuleRequest::CopyFrom(const EnableBreakAllCallsInModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.EnableBreakAllCallsInModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBreakAllCallsInModuleRequest::IsInitialized() const {
  return true;
}

void EnableBreakAllCallsInModuleRequest::InternalSwap(EnableBreakAllCallsInModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.module_name_, lhs_arena,
      &other->_impl_.module_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBreakAllCallsInModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[13]);
}

// ===================================================================

class DisableBreakAllCallsInModuleRequest::_Internal {
 public:
};

DisableBreakAllCallsInModuleRequest::DisableBreakAllCallsInModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisableBreakAllCallsInModuleRequest)
}
DisableBreakAllCallsInModuleRequest::DisableBreakAllCallsInModuleRequest(const DisableBreakAllCallsInModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableBreakAllCallsInModuleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_name().empty()) {
    _this->_impl_.module_name_.Set(from._internal_module_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisableBreakAllCallsInModuleRequest)
}

inline void DisableBreakAllCallsInModuleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.module_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.module_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableBreakAllCallsInModuleRequest::~DisableBreakAllCallsInModuleRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBreakAllCallsInModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.module_name_.Destroy();
}

void DisableBreakAllCallsInModuleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableBreakAllCallsInModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.module_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBreakAllCallsInModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.DisableBreakAllCallsInModuleRequest.module_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBreakAllCallsInModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_name = 1;
  if (!this->_internal_module_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_name().data(), static_cast<int>(this->_internal_module_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.DisableBreakAllCallsInModuleRequest.module_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  return target;
}

size_t DisableBreakAllCallsInModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_name = 1;
  if (!this->_internal_module_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBreakAllCallsInModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableBreakAllCallsInModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBreakAllCallsInModuleRequest::GetClassData() const { return &_class_data_; }


void DisableBreakAllCallsInModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableBreakAllCallsInModuleRequest*>(&to_msg);
  auto& from = static_cast<const DisableBreakAllCallsInModuleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_name().empty()) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBreakAllCallsInModuleRequest::CopyFrom(const DisableBreakAllCallsInModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisableBreakAllCallsInModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBreakAllCallsInModuleRequest::IsInitialized() const {
  return true;
}

void DisableBreakAllCallsInModuleRequest::InternalSwap(DisableBreakAllCallsInModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.module_name_, lhs_arena,
      &other->_impl_.module_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBreakAllCallsInModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[14]);
}

// ===================================================================

class EnableBreakCallByAddressRequest::_Internal {
 public:
};

EnableBreakCallByAddressRequest::EnableBreakCallByAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.EnableBreakCallByAddressRequest)
}
EnableBreakCallByAddressRequest::EnableBreakCallByAddressRequest(const EnableBreakCallByAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableBreakCallByAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.EnableBreakCallByAddressRequest)
}

inline void EnableBreakCallByAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnableBreakCallByAddressRequest::~EnableBreakCallByAddressRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.EnableBreakCallByAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBreakCallByAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnableBreakCallByAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableBreakCallByAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.EnableBreakCallByAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBreakCallByAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBreakCallByAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.EnableBreakCallByAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.EnableBreakCallByAddressRequest)
  return target;
}

size_t EnableBreakCallByAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.EnableBreakCallByAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBreakCallByAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableBreakCallByAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBreakCallByAddressRequest::GetClassData() const { return &_class_data_; }


void EnableBreakCallByAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableBreakCallByAddressRequest*>(&to_msg);
  auto& from = static_cast<const EnableBreakCallByAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.EnableBreakCallByAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBreakCallByAddressRequest::CopyFrom(const EnableBreakCallByAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.EnableBreakCallByAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBreakCallByAddressRequest::IsInitialized() const {
  return true;
}

void EnableBreakCallByAddressRequest::InternalSwap(EnableBreakCallByAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBreakCallByAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[15]);
}

// ===================================================================

class DisableBreakCallByAddressRequest::_Internal {
 public:
};

DisableBreakCallByAddressRequest::DisableBreakCallByAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisableBreakCallByAddressRequest)
}
DisableBreakCallByAddressRequest::DisableBreakCallByAddressRequest(const DisableBreakCallByAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableBreakCallByAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisableBreakCallByAddressRequest)
}

inline void DisableBreakCallByAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisableBreakCallByAddressRequest::~DisableBreakCallByAddressRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisableBreakCallByAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBreakCallByAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DisableBreakCallByAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableBreakCallByAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisableBreakCallByAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBreakCallByAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBreakCallByAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisableBreakCallByAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisableBreakCallByAddressRequest)
  return target;
}

size_t DisableBreakCallByAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisableBreakCallByAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBreakCallByAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableBreakCallByAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBreakCallByAddressRequest::GetClassData() const { return &_class_data_; }


void DisableBreakCallByAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableBreakCallByAddressRequest*>(&to_msg);
  auto& from = static_cast<const DisableBreakCallByAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisableBreakCallByAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBreakCallByAddressRequest::CopyFrom(const DisableBreakCallByAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisableBreakCallByAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBreakCallByAddressRequest::IsInitialized() const {
  return true;
}

void DisableBreakCallByAddressRequest::InternalSwap(DisableBreakCallByAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBreakCallByAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[16]);
}

// ===================================================================

class EnableBreakCallByNameRequest::_Internal {
 public:
};

EnableBreakCallByNameRequest::EnableBreakCallByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.EnableBreakCallByNameRequest)
}
EnableBreakCallByNameRequest::EnableBreakCallByNameRequest(const EnableBreakCallByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableBreakCallByNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.EnableBreakCallByNameRequest)
}

inline void EnableBreakCallByNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EnableBreakCallByNameRequest::~EnableBreakCallByNameRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.EnableBreakCallByNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBreakCallByNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void EnableBreakCallByNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableBreakCallByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.EnableBreakCallByNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBreakCallByNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.EnableBreakCallByNameRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBreakCallByNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.EnableBreakCallByNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.EnableBreakCallByNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.EnableBreakCallByNameRequest)
  return target;
}

size_t EnableBreakCallByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.EnableBreakCallByNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBreakCallByNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableBreakCallByNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBreakCallByNameRequest::GetClassData() const { return &_class_data_; }


void EnableBreakCallByNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableBreakCallByNameRequest*>(&to_msg);
  auto& from = static_cast<const EnableBreakCallByNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.EnableBreakCallByNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBreakCallByNameRequest::CopyFrom(const EnableBreakCallByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.EnableBreakCallByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBreakCallByNameRequest::IsInitialized() const {
  return true;
}

void EnableBreakCallByNameRequest::InternalSwap(EnableBreakCallByNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBreakCallByNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[17]);
}

// ===================================================================

class DisableBreakCallByNameRequest::_Internal {
 public:
};

DisableBreakCallByNameRequest::DisableBreakCallByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisableBreakCallByNameRequest)
}
DisableBreakCallByNameRequest::DisableBreakCallByNameRequest(const DisableBreakCallByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableBreakCallByNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisableBreakCallByNameRequest)
}

inline void DisableBreakCallByNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableBreakCallByNameRequest::~DisableBreakCallByNameRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisableBreakCallByNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBreakCallByNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DisableBreakCallByNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableBreakCallByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisableBreakCallByNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBreakCallByNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.DisableBreakCallByNameRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBreakCallByNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisableBreakCallByNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.DisableBreakCallByNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisableBreakCallByNameRequest)
  return target;
}

size_t DisableBreakCallByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisableBreakCallByNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBreakCallByNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableBreakCallByNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBreakCallByNameRequest::GetClassData() const { return &_class_data_; }


void DisableBreakCallByNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableBreakCallByNameRequest*>(&to_msg);
  auto& from = static_cast<const DisableBreakCallByNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisableBreakCallByNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBreakCallByNameRequest::CopyFrom(const DisableBreakCallByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisableBreakCallByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBreakCallByNameRequest::IsInitialized() const {
  return true;
}

void DisableBreakCallByNameRequest::InternalSwap(DisableBreakCallByNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBreakCallByNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[18]);
}

// ===================================================================

class EnableBreakpointByAddressRequest::_Internal {
 public:
};

EnableBreakpointByAddressRequest::EnableBreakpointByAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.EnableBreakpointByAddressRequest)
}
EnableBreakpointByAddressRequest::EnableBreakpointByAddressRequest(const EnableBreakpointByAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableBreakpointByAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.EnableBreakpointByAddressRequest)
}

inline void EnableBreakpointByAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnableBreakpointByAddressRequest::~EnableBreakpointByAddressRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.EnableBreakpointByAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBreakpointByAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnableBreakpointByAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableBreakpointByAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.EnableBreakpointByAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBreakpointByAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBreakpointByAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.EnableBreakpointByAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.EnableBreakpointByAddressRequest)
  return target;
}

size_t EnableBreakpointByAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.EnableBreakpointByAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBreakpointByAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableBreakpointByAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBreakpointByAddressRequest::GetClassData() const { return &_class_data_; }


void EnableBreakpointByAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableBreakpointByAddressRequest*>(&to_msg);
  auto& from = static_cast<const EnableBreakpointByAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.EnableBreakpointByAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBreakpointByAddressRequest::CopyFrom(const EnableBreakpointByAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.EnableBreakpointByAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBreakpointByAddressRequest::IsInitialized() const {
  return true;
}

void EnableBreakpointByAddressRequest::InternalSwap(EnableBreakpointByAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBreakpointByAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[19]);
}

// ===================================================================

class DisableBreakpointByAddressRequest::_Internal {
 public:
};

DisableBreakpointByAddressRequest::DisableBreakpointByAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisableBreakpointByAddressRequest)
}
DisableBreakpointByAddressRequest::DisableBreakpointByAddressRequest(const DisableBreakpointByAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableBreakpointByAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisableBreakpointByAddressRequest)
}

inline void DisableBreakpointByAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisableBreakpointByAddressRequest::~DisableBreakpointByAddressRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisableBreakpointByAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBreakpointByAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DisableBreakpointByAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableBreakpointByAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisableBreakpointByAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBreakpointByAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBreakpointByAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisableBreakpointByAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisableBreakpointByAddressRequest)
  return target;
}

size_t DisableBreakpointByAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisableBreakpointByAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBreakpointByAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableBreakpointByAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBreakpointByAddressRequest::GetClassData() const { return &_class_data_; }


void DisableBreakpointByAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableBreakpointByAddressRequest*>(&to_msg);
  auto& from = static_cast<const DisableBreakpointByAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisableBreakpointByAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBreakpointByAddressRequest::CopyFrom(const DisableBreakpointByAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisableBreakpointByAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBreakpointByAddressRequest::IsInitialized() const {
  return true;
}

void DisableBreakpointByAddressRequest::InternalSwap(DisableBreakpointByAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBreakpointByAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[20]);
}

// ===================================================================

class EnableBreakpointByNameRequest::_Internal {
 public:
};

EnableBreakpointByNameRequest::EnableBreakpointByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.EnableBreakpointByNameRequest)
}
EnableBreakpointByNameRequest::EnableBreakpointByNameRequest(const EnableBreakpointByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnableBreakpointByNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.EnableBreakpointByNameRequest)
}

inline void EnableBreakpointByNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EnableBreakpointByNameRequest::~EnableBreakpointByNameRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.EnableBreakpointByNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBreakpointByNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void EnableBreakpointByNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnableBreakpointByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.EnableBreakpointByNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBreakpointByNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.EnableBreakpointByNameRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBreakpointByNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.EnableBreakpointByNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.EnableBreakpointByNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.EnableBreakpointByNameRequest)
  return target;
}

size_t EnableBreakpointByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.EnableBreakpointByNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBreakpointByNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnableBreakpointByNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBreakpointByNameRequest::GetClassData() const { return &_class_data_; }


void EnableBreakpointByNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnableBreakpointByNameRequest*>(&to_msg);
  auto& from = static_cast<const EnableBreakpointByNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.EnableBreakpointByNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBreakpointByNameRequest::CopyFrom(const EnableBreakpointByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.EnableBreakpointByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBreakpointByNameRequest::IsInitialized() const {
  return true;
}

void EnableBreakpointByNameRequest::InternalSwap(EnableBreakpointByNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBreakpointByNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[21]);
}

// ===================================================================

class DisableBreakpointByNameRequest::_Internal {
 public:
};

DisableBreakpointByNameRequest::DisableBreakpointByNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisableBreakpointByNameRequest)
}
DisableBreakpointByNameRequest::DisableBreakpointByNameRequest(const DisableBreakpointByNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisableBreakpointByNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisableBreakpointByNameRequest)
}

inline void DisableBreakpointByNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableBreakpointByNameRequest::~DisableBreakpointByNameRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisableBreakpointByNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBreakpointByNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DisableBreakpointByNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisableBreakpointByNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisableBreakpointByNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBreakpointByNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.DisableBreakpointByNameRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBreakpointByNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisableBreakpointByNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.DisableBreakpointByNameRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisableBreakpointByNameRequest)
  return target;
}

size_t DisableBreakpointByNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisableBreakpointByNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBreakpointByNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisableBreakpointByNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBreakpointByNameRequest::GetClassData() const { return &_class_data_; }


void DisableBreakpointByNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisableBreakpointByNameRequest*>(&to_msg);
  auto& from = static_cast<const DisableBreakpointByNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisableBreakpointByNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBreakpointByNameRequest::CopyFrom(const DisableBreakpointByNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisableBreakpointByNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBreakpointByNameRequest::IsInitialized() const {
  return true;
}

void DisableBreakpointByNameRequest::InternalSwap(DisableBreakpointByNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBreakpointByNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[22]);
}

// ===================================================================

class LoadModuleRequest::_Internal {
 public:
};

LoadModuleRequest::LoadModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.LoadModuleRequest)
}
LoadModuleRequest::LoadModuleRequest(const LoadModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadModuleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.LoadModuleRequest)
}

inline void LoadModuleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadModuleRequest::~LoadModuleRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.LoadModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void LoadModuleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.LoadModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.LoadModuleRequest.path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.LoadModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.LoadModuleRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.LoadModuleRequest)
  return target;
}

size_t LoadModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.LoadModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadModuleRequest::GetClassData() const { return &_class_data_; }


void LoadModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadModuleRequest*>(&to_msg);
  auto& from = static_cast<const LoadModuleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.LoadModuleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadModuleRequest::CopyFrom(const LoadModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.LoadModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadModuleRequest::IsInitialized() const {
  return true;
}

void LoadModuleRequest::InternalSwap(LoadModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[23]);
}

// ===================================================================

class UnloadModuleRequest::_Internal {
 public:
};

UnloadModuleRequest::UnloadModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.UnloadModuleRequest)
}
UnloadModuleRequest::UnloadModuleRequest(const UnloadModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnloadModuleRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.UnloadModuleRequest)
}

inline void UnloadModuleRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnloadModuleRequest::~UnloadModuleRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.UnloadModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnloadModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
}

void UnloadModuleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnloadModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.UnloadModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnloadModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.UnloadModuleRequest.path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnloadModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.UnloadModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.UnloadModuleRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.UnloadModuleRequest)
  return target;
}

size_t UnloadModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.UnloadModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnloadModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnloadModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnloadModuleRequest::GetClassData() const { return &_class_data_; }


void UnloadModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnloadModuleRequest*>(&to_msg);
  auto& from = static_cast<const UnloadModuleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.UnloadModuleRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnloadModuleRequest::CopyFrom(const UnloadModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.UnloadModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnloadModuleRequest::IsInitialized() const {
  return true;
}

void UnloadModuleRequest::InternalSwap(UnloadModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnloadModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[24]);
}

// ===================================================================

class ReadMemoryRequest::_Internal {
 public:
};

ReadMemoryRequest::ReadMemoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.ReadMemoryRequest)
}
ReadMemoryRequest::ReadMemoryRequest(const ReadMemoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadMemoryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.address_, &from._impl_.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.ReadMemoryRequest)
}

inline void ReadMemoryRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , decltype(_impl_.size_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReadMemoryRequest::~ReadMemoryRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.ReadMemoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadMemoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReadMemoryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadMemoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.ReadMemoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadMemoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadMemoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.ReadMemoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.ReadMemoryRequest)
  return target;
}

size_t ReadMemoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.ReadMemoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadMemoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadMemoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadMemoryRequest::GetClassData() const { return &_class_data_; }


void ReadMemoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadMemoryRequest*>(&to_msg);
  auto& from = static_cast<const ReadMemoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.ReadMemoryRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMemoryRequest::CopyFrom(const ReadMemoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.ReadMemoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadMemoryRequest::IsInitialized() const {
  return true;
}

void ReadMemoryRequest::InternalSwap(ReadMemoryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadMemoryRequest, _impl_.size_)
      + sizeof(ReadMemoryRequest::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(ReadMemoryRequest, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadMemoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[25]);
}

// ===================================================================

class ReadMemoryResponse::_Internal {
 public:
};

ReadMemoryResponse::ReadMemoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.ReadMemoryResponse)
}
ReadMemoryResponse::ReadMemoryResponse(const ReadMemoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadMemoryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bytes().empty()) {
    _this->_impl_.bytes_.Set(from._internal_bytes(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.ReadMemoryResponse)
}

inline void ReadMemoryResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadMemoryResponse::~ReadMemoryResponse() {
  // @@protoc_insertion_point(destructor:TED.Grpc.ReadMemoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadMemoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bytes_.Destroy();
}

void ReadMemoryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadMemoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.ReadMemoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadMemoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadMemoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.ReadMemoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bytes = 1;
  if (!this->_internal_bytes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.ReadMemoryResponse)
  return target;
}

size_t ReadMemoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.ReadMemoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes bytes = 1;
  if (!this->_internal_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bytes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadMemoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadMemoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadMemoryResponse::GetClassData() const { return &_class_data_; }


void ReadMemoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadMemoryResponse*>(&to_msg);
  auto& from = static_cast<const ReadMemoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.ReadMemoryResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bytes().empty()) {
    _this->_internal_set_bytes(from._internal_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMemoryResponse::CopyFrom(const ReadMemoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.ReadMemoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadMemoryResponse::IsInitialized() const {
  return true;
}

void ReadMemoryResponse::InternalSwap(ReadMemoryResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bytes_, lhs_arena,
      &other->_impl_.bytes_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadMemoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[26]);
}

// ===================================================================

class WriteMemoryRequest::_Internal {
 public:
};

WriteMemoryRequest::WriteMemoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.WriteMemoryRequest)
}
WriteMemoryRequest::WriteMemoryRequest(const WriteMemoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WriteMemoryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_){}
    , decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bytes().empty()) {
    _this->_impl_.bytes_.Set(from._internal_bytes(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.WriteMemoryRequest)
}

inline void WriteMemoryRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bytes_){}
    , decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WriteMemoryRequest::~WriteMemoryRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.WriteMemoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WriteMemoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bytes_.Destroy();
}

void WriteMemoryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WriteMemoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.WriteMemoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_.ClearToEmpty();
  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WriteMemoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WriteMemoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.WriteMemoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.WriteMemoryRequest)
  return target;
}

size_t WriteMemoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.WriteMemoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bytes());
  }

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WriteMemoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WriteMemoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WriteMemoryRequest::GetClassData() const { return &_class_data_; }


void WriteMemoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WriteMemoryRequest*>(&to_msg);
  auto& from = static_cast<const WriteMemoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.WriteMemoryRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bytes().empty()) {
    _this->_internal_set_bytes(from._internal_bytes());
  }
  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WriteMemoryRequest::CopyFrom(const WriteMemoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.WriteMemoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteMemoryRequest::IsInitialized() const {
  return true;
}

void WriteMemoryRequest::InternalSwap(WriteMemoryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bytes_, lhs_arena,
      &other->_impl_.bytes_, rhs_arena
  );
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteMemoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[27]);
}

// ===================================================================

class OptionsRequest::_Internal {
 public:
};

OptionsRequest::OptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.OptionsRequest)
}
OptionsRequest::OptionsRequest(const OptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OptionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_path_){}
    , decltype(_impl_.return_call_stack_){}
    , decltype(_impl_.return_context_){}
    , decltype(_impl_.return_symbol_info_){}
    , decltype(_impl_.use_invasive_breakpoints_){}
    , decltype(_impl_.unsafe_memory_mode_){}
    , decltype(_impl_.auto_disable_breakpoints_mode_){}
    , decltype(_impl_.kill_process_on_disconnect_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.symbol_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.symbol_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol_path().empty()) {
    _this->_impl_.symbol_path_.Set(from._internal_symbol_path(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.return_call_stack_, &from._impl_.return_call_stack_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.kill_process_on_disconnect_) -
    reinterpret_cast<char*>(&_impl_.return_call_stack_)) + sizeof(_impl_.kill_process_on_disconnect_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.OptionsRequest)
}

inline void OptionsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_path_){}
    , decltype(_impl_.return_call_stack_){false}
    , decltype(_impl_.return_context_){false}
    , decltype(_impl_.return_symbol_info_){false}
    , decltype(_impl_.use_invasive_breakpoints_){false}
    , decltype(_impl_.unsafe_memory_mode_){false}
    , decltype(_impl_.auto_disable_breakpoints_mode_){false}
    , decltype(_impl_.kill_process_on_disconnect_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.symbol_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.symbol_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OptionsRequest::~OptionsRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.OptionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OptionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_path_.Destroy();
}

void OptionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.OptionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_path_.ClearToEmpty();
  ::memset(&_impl_.return_call_stack_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.kill_process_on_disconnect_) -
      reinterpret_cast<char*>(&_impl_.return_call_stack_)) + sizeof(_impl_.kill_process_on_disconnect_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OptionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool return_call_stack = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.return_call_stack_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool return_context = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.return_context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool return_symbol_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.return_symbol_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool use_invasive_breakpoints = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.use_invasive_breakpoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool unsafe_memory_mode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.unsafe_memory_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_disable_breakpoints_mode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.auto_disable_breakpoints_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool kill_process_on_disconnect = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.kill_process_on_disconnect_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string symbol_path = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_symbol_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.OptionsRequest.symbol_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OptionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.OptionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_call_stack = 1;
  if (this->_internal_return_call_stack() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_return_call_stack(), target);
  }

  // bool return_context = 2;
  if (this->_internal_return_context() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_return_context(), target);
  }

  // bool return_symbol_info = 3;
  if (this->_internal_return_symbol_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_return_symbol_info(), target);
  }

  // bool use_invasive_breakpoints = 4;
  if (this->_internal_use_invasive_breakpoints() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_use_invasive_breakpoints(), target);
  }

  // bool unsafe_memory_mode = 5;
  if (this->_internal_unsafe_memory_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_unsafe_memory_mode(), target);
  }

  // bool auto_disable_breakpoints_mode = 6;
  if (this->_internal_auto_disable_breakpoints_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_auto_disable_breakpoints_mode(), target);
  }

  // bool kill_process_on_disconnect = 7;
  if (this->_internal_kill_process_on_disconnect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_kill_process_on_disconnect(), target);
  }

  // string symbol_path = 8;
  if (!this->_internal_symbol_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_symbol_path().data(), static_cast<int>(this->_internal_symbol_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.OptionsRequest.symbol_path");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_symbol_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.OptionsRequest)
  return target;
}

size_t OptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.OptionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol_path = 8;
  if (!this->_internal_symbol_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_symbol_path());
  }

  // bool return_call_stack = 1;
  if (this->_internal_return_call_stack() != 0) {
    total_size += 1 + 1;
  }

  // bool return_context = 2;
  if (this->_internal_return_context() != 0) {
    total_size += 1 + 1;
  }

  // bool return_symbol_info = 3;
  if (this->_internal_return_symbol_info() != 0) {
    total_size += 1 + 1;
  }

  // bool use_invasive_breakpoints = 4;
  if (this->_internal_use_invasive_breakpoints() != 0) {
    total_size += 1 + 1;
  }

  // bool unsafe_memory_mode = 5;
  if (this->_internal_unsafe_memory_mode() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_disable_breakpoints_mode = 6;
  if (this->_internal_auto_disable_breakpoints_mode() != 0) {
    total_size += 1 + 1;
  }

  // bool kill_process_on_disconnect = 7;
  if (this->_internal_kill_process_on_disconnect() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OptionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OptionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OptionsRequest::GetClassData() const { return &_class_data_; }


void OptionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OptionsRequest*>(&to_msg);
  auto& from = static_cast<const OptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.OptionsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol_path().empty()) {
    _this->_internal_set_symbol_path(from._internal_symbol_path());
  }
  if (from._internal_return_call_stack() != 0) {
    _this->_internal_set_return_call_stack(from._internal_return_call_stack());
  }
  if (from._internal_return_context() != 0) {
    _this->_internal_set_return_context(from._internal_return_context());
  }
  if (from._internal_return_symbol_info() != 0) {
    _this->_internal_set_return_symbol_info(from._internal_return_symbol_info());
  }
  if (from._internal_use_invasive_breakpoints() != 0) {
    _this->_internal_set_use_invasive_breakpoints(from._internal_use_invasive_breakpoints());
  }
  if (from._internal_unsafe_memory_mode() != 0) {
    _this->_internal_set_unsafe_memory_mode(from._internal_unsafe_memory_mode());
  }
  if (from._internal_auto_disable_breakpoints_mode() != 0) {
    _this->_internal_set_auto_disable_breakpoints_mode(from._internal_auto_disable_breakpoints_mode());
  }
  if (from._internal_kill_process_on_disconnect() != 0) {
    _this->_internal_set_kill_process_on_disconnect(from._internal_kill_process_on_disconnect());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OptionsRequest::CopyFrom(const OptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.OptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionsRequest::IsInitialized() const {
  return true;
}

void OptionsRequest::InternalSwap(OptionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.symbol_path_, lhs_arena,
      &other->_impl_.symbol_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptionsRequest, _impl_.kill_process_on_disconnect_)
      + sizeof(OptionsRequest::_impl_.kill_process_on_disconnect_)
      - PROTOBUF_FIELD_OFFSET(OptionsRequest, _impl_.return_call_stack_)>(
          reinterpret_cast<char*>(&_impl_.return_call_stack_),
          reinterpret_cast<char*>(&other->_impl_.return_call_stack_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[28]);
}

// ===================================================================

class DisassembleAddressRequest::_Internal {
 public:
};

DisassembleAddressRequest::DisassembleAddressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisassembleAddressRequest)
}
DisassembleAddressRequest::DisassembleAddressRequest(const DisassembleAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisassembleAddressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.address_, &from._impl_.address_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.size_) -
    reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisassembleAddressRequest)
}

inline void DisassembleAddressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){uint64_t{0u}}
    , decltype(_impl_.size_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisassembleAddressRequest::~DisassembleAddressRequest() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisassembleAddressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisassembleAddressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DisassembleAddressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisassembleAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisassembleAddressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.address_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisassembleAddressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisassembleAddressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisassembleAddressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisassembleAddressRequest)
  return target;
}

size_t DisassembleAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisassembleAddressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  // uint32 size = 2;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisassembleAddressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisassembleAddressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisassembleAddressRequest::GetClassData() const { return &_class_data_; }


void DisassembleAddressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisassembleAddressRequest*>(&to_msg);
  auto& from = static_cast<const DisassembleAddressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisassembleAddressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisassembleAddressRequest::CopyFrom(const DisassembleAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisassembleAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisassembleAddressRequest::IsInitialized() const {
  return true;
}

void DisassembleAddressRequest::InternalSwap(DisassembleAddressRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DisassembleAddressRequest, _impl_.size_)
      + sizeof(DisassembleAddressRequest::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(DisassembleAddressRequest, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DisassembleAddressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[29]);
}

// ===================================================================

class Instruction::_Internal {
 public:
};

Instruction::Instruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.Instruction)
}
Instruction::Instruction(const Instruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Instruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mnemonic_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.bytes_){}
    , decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mnemonic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mnemonic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mnemonic().empty()) {
    _this->_impl_.mnemonic_.Set(from._internal_mnemonic(), 
      _this->GetArenaForAllocation());
  }
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bytes().empty()) {
    _this->_impl_.bytes_.Set(from._internal_bytes(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.address_ = from._impl_.address_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.Instruction)
}

inline void Instruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mnemonic_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.bytes_){}
    , decltype(_impl_.address_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mnemonic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mnemonic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Instruction::~Instruction() {
  // @@protoc_insertion_point(destructor:TED.Grpc.Instruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Instruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mnemonic_.Destroy();
  _impl_.text_.Destroy();
  _impl_.bytes_.Destroy();
}

void Instruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.Instruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mnemonic_.ClearToEmpty();
  _impl_.text_.ClearToEmpty();
  _impl_.bytes_.ClearToEmpty();
  _impl_.address_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Instruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.address_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mnemonic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mnemonic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.Instruction.mnemonic"));
        } else
          goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.Instruction.text"));
        } else
          goto handle_unusual;
        continue;
      // bytes bytes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Instruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.Instruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_address(), target);
  }

  // string mnemonic = 2;
  if (!this->_internal_mnemonic().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mnemonic().data(), static_cast<int>(this->_internal_mnemonic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.Instruction.mnemonic");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mnemonic(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.Instruction.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  // bytes bytes = 4;
  if (!this->_internal_bytes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.Instruction)
  return target;
}

size_t Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.Instruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mnemonic = 2;
  if (!this->_internal_mnemonic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mnemonic());
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // bytes bytes = 4;
  if (!this->_internal_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bytes());
  }

  // uint64 address = 1;
  if (this->_internal_address() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Instruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Instruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Instruction::GetClassData() const { return &_class_data_; }


void Instruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Instruction*>(&to_msg);
  auto& from = static_cast<const Instruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.Instruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mnemonic().empty()) {
    _this->_internal_set_mnemonic(from._internal_mnemonic());
  }
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (!from._internal_bytes().empty()) {
    _this->_internal_set_bytes(from._internal_bytes());
  }
  if (from._internal_address() != 0) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Instruction::CopyFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instruction::IsInitialized() const {
  return true;
}

void Instruction::InternalSwap(Instruction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mnemonic_, lhs_arena,
      &other->_impl_.mnemonic_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bytes_, lhs_arena,
      &other->_impl_.bytes_, rhs_arena
  );
  swap(_impl_.address_, other->_impl_.address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Instruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[30]);
}

// ===================================================================

class DisassembleAddressResponse::_Internal {
 public:
};

DisassembleAddressResponse::DisassembleAddressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.DisassembleAddressResponse)
}
DisassembleAddressResponse::DisassembleAddressResponse(const DisassembleAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DisassembleAddressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instructions_){from._impl_.instructions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.DisassembleAddressResponse)
}

inline void DisassembleAddressResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instructions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DisassembleAddressResponse::~DisassembleAddressResponse() {
  // @@protoc_insertion_point(destructor:TED.Grpc.DisassembleAddressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisassembleAddressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instructions_.~RepeatedPtrField();
}

void DisassembleAddressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DisassembleAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.DisassembleAddressResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instructions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisassembleAddressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TED.Grpc.Instruction instructions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_instructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisassembleAddressResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.DisassembleAddressResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TED.Grpc.Instruction instructions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_instructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_instructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.DisassembleAddressResponse)
  return target;
}

size_t DisassembleAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.DisassembleAddressResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TED.Grpc.Instruction instructions = 1;
  total_size += 1UL * this->_internal_instructions_size();
  for (const auto& msg : this->_impl_.instructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisassembleAddressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DisassembleAddressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisassembleAddressResponse::GetClassData() const { return &_class_data_; }


void DisassembleAddressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DisassembleAddressResponse*>(&to_msg);
  auto& from = static_cast<const DisassembleAddressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.DisassembleAddressResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.instructions_.MergeFrom(from._impl_.instructions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisassembleAddressResponse::CopyFrom(const DisassembleAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.DisassembleAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisassembleAddressResponse::IsInitialized() const {
  return true;
}

void DisassembleAddressResponse::InternalSwap(DisassembleAddressResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instructions_.InternalSwap(&other->_impl_.instructions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisassembleAddressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[31]);
}

// ===================================================================

class GenericResponse::_Internal {
 public:
};

GenericResponse::GenericResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:TED.Grpc.GenericResponse)
}
GenericResponse::GenericResponse(const GenericResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenericResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.last_error_code_){from._impl_.last_error_code_}
    , /*decltype(_impl_._last_error_code_cached_byte_size_)*/{0}
    , decltype(_impl_.error_message_){from._impl_.error_message_}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:TED.Grpc.GenericResponse)
}

inline void GenericResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.last_error_code_){arena}
    , /*decltype(_impl_._last_error_code_cached_byte_size_)*/{0}
    , decltype(_impl_.error_message_){arena}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GenericResponse::~GenericResponse() {
  // @@protoc_insertion_point(destructor:TED.Grpc.GenericResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenericResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.last_error_code_.~RepeatedField();
  _impl_.error_message_.~RepeatedPtrField();
}

void GenericResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenericResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:TED.Grpc.GenericResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_error_code_.Clear();
  _impl_.error_message_.Clear();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenericResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 last_error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_last_error_code(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_last_error_code(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_error_message();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "TED.Grpc.GenericResponse.error_message"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GenericResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TED.Grpc.GenericResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated uint32 last_error_code = 2;
  {
    int byte_size = _impl_._last_error_code_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_last_error_code(), byte_size, target);
    }
  }

  // repeated string error_message = 3;
  for (int i = 0, n = this->_internal_error_message_size(); i < n; i++) {
    const auto& s = this->_internal_error_message(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "TED.Grpc.GenericResponse.error_message");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TED.Grpc.GenericResponse)
  return target;
}

size_t GenericResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TED.Grpc.GenericResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 last_error_code = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.last_error_code_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._last_error_code_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string error_message = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.error_message_.size());
  for (int i = 0, n = _impl_.error_message_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.error_message_.Get(i));
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenericResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenericResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenericResponse::GetClassData() const { return &_class_data_; }


void GenericResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenericResponse*>(&to_msg);
  auto& from = static_cast<const GenericResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TED.Grpc.GenericResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.last_error_code_.MergeFrom(from._impl_.last_error_code_);
  _this->_impl_.error_message_.MergeFrom(from._impl_.error_message_);
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenericResponse::CopyFrom(const GenericResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TED.Grpc.GenericResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericResponse::IsInitialized() const {
  return true;
}

void GenericResponse::InternalSwap(GenericResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.last_error_code_.InternalSwap(&other->_impl_.last_error_code_);
  _impl_.error_message_.InternalSwap(&other->_impl_.error_message_);
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_TED_2eproto_getter, &descriptor_table_TED_2eproto_once,
      file_level_metadata_TED_2eproto[32]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace TED
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TED::Grpc::Empty*
Arena::CreateMaybeMessage< ::TED::Grpc::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::SegmentRegisters*
Arena::CreateMaybeMessage< ::TED::Grpc::SegmentRegisters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::SegmentRegisters >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DebugRegisters*
Arena::CreateMaybeMessage< ::TED::Grpc::DebugRegisters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DebugRegisters >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::GeneralRegisters*
Arena::CreateMaybeMessage< ::TED::Grpc::GeneralRegisters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::GeneralRegisters >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::GeneralRegistersX64*
Arena::CreateMaybeMessage< ::TED::Grpc::GeneralRegistersX64 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::GeneralRegistersX64 >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::Context*
Arena::CreateMaybeMessage< ::TED::Grpc::Context >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::Context >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::Symbols*
Arena::CreateMaybeMessage< ::TED::Grpc::Symbols >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::Symbols >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::StackFrame*
Arena::CreateMaybeMessage< ::TED::Grpc::StackFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::StackFrame >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::CallStack*
Arena::CreateMaybeMessage< ::TED::Grpc::CallStack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::CallStack >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::BreakpointResponse*
Arena::CreateMaybeMessage< ::TED::Grpc::BreakpointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::BreakpointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::ExecutableSection*
Arena::CreateMaybeMessage< ::TED::Grpc::ExecutableSection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::ExecutableSection >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::ModuleInfo*
Arena::CreateMaybeMessage< ::TED::Grpc::ModuleInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::ModuleInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::GetModulesResponse*
Arena::CreateMaybeMessage< ::TED::Grpc::GetModulesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::GetModulesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::EnableBreakAllCallsInModuleRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::EnableBreakAllCallsInModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::EnableBreakAllCallsInModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisableBreakAllCallsInModuleRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisableBreakAllCallsInModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisableBreakAllCallsInModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::EnableBreakCallByAddressRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::EnableBreakCallByAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::EnableBreakCallByAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisableBreakCallByAddressRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisableBreakCallByAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisableBreakCallByAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::EnableBreakCallByNameRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::EnableBreakCallByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::EnableBreakCallByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisableBreakCallByNameRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisableBreakCallByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisableBreakCallByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::EnableBreakpointByAddressRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::EnableBreakpointByAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::EnableBreakpointByAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisableBreakpointByAddressRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisableBreakpointByAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisableBreakpointByAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::EnableBreakpointByNameRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::EnableBreakpointByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::EnableBreakpointByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisableBreakpointByNameRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisableBreakpointByNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisableBreakpointByNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::LoadModuleRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::LoadModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::LoadModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::UnloadModuleRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::UnloadModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::UnloadModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::ReadMemoryRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::ReadMemoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::ReadMemoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::ReadMemoryResponse*
Arena::CreateMaybeMessage< ::TED::Grpc::ReadMemoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::ReadMemoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::WriteMemoryRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::WriteMemoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::WriteMemoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::OptionsRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::OptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::OptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisassembleAddressRequest*
Arena::CreateMaybeMessage< ::TED::Grpc::DisassembleAddressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisassembleAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::Instruction*
Arena::CreateMaybeMessage< ::TED::Grpc::Instruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::Instruction >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::DisassembleAddressResponse*
Arena::CreateMaybeMessage< ::TED::Grpc::DisassembleAddressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::DisassembleAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::TED::Grpc::GenericResponse*
Arena::CreateMaybeMessage< ::TED::Grpc::GenericResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TED::Grpc::GenericResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
